/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 5500.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 40.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("btn_press")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("down_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("led_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("rst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("btn_press")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 2940.0;
		}
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
	}
}

TRANSITION_LIST("down_en")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2640.0;
			LEVEL 1 FOR 2860.0;
		}
	}
}

TRANSITION_LIST("led_out")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 2.712;
			LEVEL 0 FOR 5066.638;
			LEVEL 1 FOR 138.545;
			LEVEL 0 FOR 141.455;
			LEVEL 1 FOR 150.65;
		}
	}
}

TRANSITION_LIST("q[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.827;
			LEVEL 0 FOR 1299.899;
			LEVEL 1 FOR 2482.121;
			LEVEL 0 FOR 1710.153;
		}
	}
}

TRANSITION_LIST("q[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.913;
			LEVEL 0 FOR 660.9;
			LEVEL 1 FOR 640.025;
			LEVEL 0 FOR 639.975;
			LEVEL 1 FOR 1202.124;
			LEVEL 0 FOR 640.091;
			LEVEL 1 FOR 639.909;
			LEVEL 0 FOR 1070.063;
		}
	}
}

TRANSITION_LIST("q[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.796;
			LEVEL 0 FOR 339.895;
			LEVEL 1 FOR 320.033;
			LEVEL 0 FOR 319.967;
			LEVEL 1 FOR 320.033;
			LEVEL 0 FOR 319.967;
			LEVEL 1 FOR 320.033;
			LEVEL 0 FOR 319.967;
			LEVEL 1 FOR 562.121;
			LEVEL 0 FOR 320.105;
			LEVEL 1 FOR 319.895;
			LEVEL 0 FOR 320.105;
			LEVEL 1 FOR 319.895;
			LEVEL 0 FOR 320.105;
			LEVEL 1 FOR 319.895;
			LEVEL 0 FOR 750.188;
		}
	}
}

TRANSITION_LIST("q[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.987;
			LEVEL 0 FOR 179.906;
			LEVEL 1 FOR 160.027;
			LEVEL 0 FOR 159.973;
			LEVEL 1 FOR 160.027;
			LEVEL 0 FOR 159.973;
			LEVEL 1 FOR 160.027;
			LEVEL 0 FOR 159.973;
			LEVEL 1 FOR 160.027;
			LEVEL 0 FOR 159.973;
			LEVEL 1 FOR 160.027;
			LEVEL 0 FOR 159.973;
			LEVEL 1 FOR 160.027;
			LEVEL 0 FOR 159.973;
			LEVEL 1 FOR 160.027;
			LEVEL 0 FOR 159.973;
			LEVEL 1 FOR 242.115;
			LEVEL 0 FOR 160.111;
			LEVEL 1 FOR 159.889;
			LEVEL 0 FOR 160.111;
			LEVEL 1 FOR 159.889;
			LEVEL 0 FOR 160.111;
			LEVEL 1 FOR 159.889;
			LEVEL 0 FOR 160.111;
			LEVEL 1 FOR 159.889;
			LEVEL 0 FOR 160.111;
			LEVEL 1 FOR 159.889;
			LEVEL 0 FOR 160.111;
			LEVEL 1 FOR 159.889;
			LEVEL 0 FOR 160.111;
			LEVEL 1 FOR 159.889;
			LEVEL 0 FOR 589.992;
		}
	}
}

TRANSITION_LIST("q[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.931;
			LEVEL 0 FOR 104.751;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 242.053;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 79.896;
			LEVEL 1 FOR 80.104;
			LEVEL 0 FOR 509.057;
		}
	}
}

TRANSITION_LIST("q[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 2.983;
			LEVEL 0 FOR 64.858;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 2.96;
			LEVEL 0 FOR 37.04;
			LEVEL 1 FOR 2.96;
			LEVEL 0 FOR 37.04;
			LEVEL 1 FOR 2.96;
			LEVEL 0 FOR 119.197;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 40.003;
			LEVEL 1 FOR 39.997;
			LEVEL 0 FOR 470.005;
		}
	}
}

TRANSITION_LIST("rst")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 5160.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 180.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "rst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "btn_press";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "down_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "led_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 5;
}
;
