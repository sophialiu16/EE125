/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 60.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("y")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("y[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "y";
}

SIGNAL("y[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "y";
}

SIGNAL("y[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "y";
}

SIGNAL("x")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("x[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "x";
}

SIGNAL("x[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "x";
}

SIGNAL("x[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "x";
}

SIGNAL("x[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "x";
}

SIGNAL("x[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "x";
}

SIGNAL("x[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "x";
}

SIGNAL("x[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "x";
}

SIGNAL("x[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "x";
}

SIGNAL("ssd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ssd[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ssd";
}

SIGNAL("ssd[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ssd";
}

SIGNAL("ssd[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ssd";
}

SIGNAL("ssd[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ssd";
}

SIGNAL("ssd[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ssd";
}

SIGNAL("ssd[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ssd";
}

SIGNAL("ssd[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ssd";
}

SIGNAL("y[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "y";
}

TRANSITION_LIST("y[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 12.0;
			LEVEL 0 FOR 120.393;
			LEVEL 1 FOR 57.56;
			LEVEL 0 FOR 182.44;
			LEVEL 1 FOR 59.845;
			LEVEL 0 FOR 59.732;
			LEVEL 1 FOR 240.185;
			LEVEL 0 FOR 59.815;
			LEVEL 1 FOR 60.185;
			LEVEL 0 FOR 59.755;
			LEVEL 1 FOR 60.245;
			LEVEL 0 FOR 27.845;
		}
	}
}

TRANSITION_LIST("y[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.345;
			LEVEL 0 FOR 120.539;
			LEVEL 1 FOR 58.691;
			LEVEL 0 FOR 61.705;
			LEVEL 1 FOR 59.821;
			LEVEL 0 FOR 120.464;
			LEVEL 1 FOR 59.688;
			LEVEL 0 FOR 119.625;
			LEVEL 1 FOR 180.375;
			LEVEL 0 FOR 59.625;
			LEVEL 1 FOR 60.789;
			LEVEL 0 FOR 59.806;
			LEVEL 1 FOR 28.527;
		}
	}
}

TRANSITION_LIST("y[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.045;
			LEVEL 0 FOR 61.311;
			LEVEL 1 FOR 60.389;
			LEVEL 0 FOR 118.29;
			LEVEL 1 FOR 60.979;
			LEVEL 0 FOR 240.105;
			LEVEL 1 FOR 117.191;
			LEVEL 0 FOR 122.763;
			LEVEL 1 FOR 120.348;
			LEVEL 0 FOR 87.579;
		}
	}
}

TRANSITION_LIST("x[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 640.0;
		}
	}
}

TRANSITION_LIST("x[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 640.0;
		}
	}
}

TRANSITION_LIST("x[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 40.0;
		}
	}
}

TRANSITION_LIST("x[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 360.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
		}
	}
}

TRANSITION_LIST("x[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 100.0;
		}
	}
}

TRANSITION_LIST("x[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 160.0;
		}
	}
}

TRANSITION_LIST("x[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 180.0;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 100.0;
		}
	}
}

TRANSITION_LIST("x[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 100.0;
		}
	}
}

TRANSITION_LIST("ssd[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 14.519;
			LEVEL 1 FOR 60.539;
			LEVEL 0 FOR 58.379;
			LEVEL 1 FOR 241.45;
			LEVEL 0 FOR 59.231;
			LEVEL 1 FOR 60.346;
			LEVEL 0 FOR 60.27;
			LEVEL 1 FOR 360.553;
			LEVEL 0 FOR 58.739;
			LEVEL 1 FOR 25.974;
		}
	}
}

TRANSITION_LIST("ssd[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 15.602;
			LEVEL 1 FOR 120.499;
			LEVEL 0 FOR 56.667;
			LEVEL 1 FOR 362.544;
			LEVEL 0 FOR 58.638;
			LEVEL 1 FOR 58.716;
			LEVEL 0 FOR 62.525;
			LEVEL 1 FOR 60.075;
			LEVEL 0 FOR 58.684;
			LEVEL 1 FOR 146.05;
		}
	}
}

TRANSITION_LIST("ssd[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.356;
			LEVEL 1 FOR 421.863;
			LEVEL 0 FOR 59.045;
			LEVEL 1 FOR 240.872;
			LEVEL 0 FOR 59.128;
			LEVEL 1 FOR 180.872;
			LEVEL 0 FOR 26.864;
		}
	}
}

TRANSITION_LIST("ssd[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 12.617;
			LEVEL 1 FOR 60.503;
			LEVEL 0 FOR 60.499;
			LEVEL 1 FOR 239.332;
			LEVEL 0 FOR 59.265;
			LEVEL 1 FOR 60.312;
			LEVEL 0 FOR 60.303;
			LEVEL 1 FOR 58.777;
			LEVEL 0 FOR 58.576;
			LEVEL 1 FOR 243.163;
			LEVEL 0 FOR 58.777;
			LEVEL 1 FOR 27.876;
		}
	}
}

TRANSITION_LIST("ssd[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 13.396;
			LEVEL 1 FOR 60.396;
			LEVEL 0 FOR 60.609;
			LEVEL 1 FOR 118.668;
			LEVEL 0 FOR 60.601;
			LEVEL 1 FOR 59.924;
			LEVEL 0 FOR 59.41;
			LEVEL 1 FOR 60.167;
			LEVEL 0 FOR 177.795;
			LEVEL 1 FOR 122.205;
			LEVEL 0 FOR 179.741;
			LEVEL 1 FOR 27.088;
		}
	}
}

TRANSITION_LIST("ssd[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 16.101;
			LEVEL 1 FOR 60.601;
			LEVEL 0 FOR 60.61;
			LEVEL 1 FOR 119.087;
			LEVEL 0 FOR 60.182;
			LEVEL 1 FOR 120.032;
			LEVEL 0 FOR 59.2;
			LEVEL 1 FOR 119.398;
			LEVEL 0 FOR 58.666;
			LEVEL 1 FOR 62.653;
			LEVEL 0 FOR 59.283;
			LEVEL 1 FOR 59.398;
			LEVEL 0 FOR 60.929;
			LEVEL 1 FOR 60.39;
			LEVEL 0 FOR 23.47;
		}
	}
}

TRANSITION_LIST("ssd[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 13.926;
			LEVEL 0 FOR 118.529;
			LEVEL 1 FOR 180.273;
			LEVEL 0 FOR 61.072;
			LEVEL 1 FOR 238.583;
			LEVEL 0 FOR 58.65;
			LEVEL 1 FOR 328.967;
		}
	}
}

TRANSITION_LIST("y[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 13.066;
			LEVEL 0 FOR 178.069;
			LEVEL 1 FOR 61.594;
			LEVEL 0 FOR 747.271;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "x";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "x[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "x[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "x[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "x[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "x[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "x[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "x[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "x[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "y";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "y[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "y[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "y[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "y[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "ssd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "ssd[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "ssd[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "ssd[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "ssd[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "ssd[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "ssd[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "ssd[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 14;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
