-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--y[0] is y[0]
y[0] = OUTPUT(A1L13);


--y[1] is y[1]
y[1] = OUTPUT(A1L15);


--y[2] is y[2]
y[2] = OUTPUT(A1L16);


--y[3] is y[3]
y[3] = OUTPUT(A1L18);


--y[4] is y[4]
y[4] = OUTPUT(A1L44);


--y[5] is y[5]
y[5] = OUTPUT(A1L44);


--y[6] is y[6]
y[6] = OUTPUT(A1L44);


--y[7] is y[7]
y[7] = OUTPUT(A1L44);


--x[0] is x[0]
x[0] = INPUT();


--x[1] is x[1]
x[1] = INPUT();


--A1L6 is ceil_log2~37
A1L6 = (!x[0] & !x[1]);


--x[2] is x[2]
x[2] = INPUT();


--x[3] is x[3]
x[3] = INPUT();


--x[4] is x[4]
x[4] = INPUT();


--A1L7 is ceil_log2~38
A1L7 = ((A1L6 & (!x[2] & !x[3]))) # (!x[4]);


--x[7] is x[7]
x[7] = INPUT();


--x[6] is x[6]
x[6] = INPUT();


--x[5] is x[5]
x[5] = INPUT();


--A1L8 is ceil_log2~39
A1L8 = (!x[2] & (!x[3] & (!x[4] & !x[5])));


--A1L9 is ceil_log2~40
A1L9 = ((x[3] & ((x[2]) # (!A1L6)))) # (!A1L20);


--A1L10 is ceil_log2~41
A1L10 = (x[7] & (A1L8 & (A1L6 & !x[6])));


--A1L24 is LessThan5~0
A1L24 = (x[5] & ((x[0]) # ((x[1]) # (x[2]))));


--A1L25 is LessThan5~1
A1L25 = (x[6]) # ((x[5] & ((x[3]) # (x[4]))));


--A1L11 is ceil_log2~42
A1L11 = (A1L19) # ((!A1L24 & !A1L25));


--A1L12 is ceil_log2~43
A1L12 = (!x[7] & ((x[6]) # ((x[5]) # (!A1L7))));


--A1L13 is ceil_log2~44
A1L13 = (A1L21) # ((A1L10) # ((A1L11 & A1L12)));


--A1L14 is ceil_log2~45
A1L14 = (A1L12 & ((A1L24) # (A1L25)));


--A1L15 is ceil_log2~46
A1L15 = (A1L10) # ((A1L22) # (A1L14));


--A1L16 is ceil_log2~47
A1L16 = (A1L10) # ((A1L23 & (A1L9 & !x[7])));


--A1L17 is ceil_log2~48
A1L17 = ((A1L8 & (A1L6 & !x[6]))) # (!x[7]);


--A1L19 is ceil_log2~49
A1L19 = (x[6] & ((x[0]) # ((x[1]) # (!A1L8))));


--A1L20 is ceil_log2~50
A1L20 = (!x[6] & (!x[4] & !x[5]));


--A1L2 is ceil_log2~7
A1L2 = (x[0] & (((x[2] & !x[3])))) # (!x[0] & ((x[1] & ((!x[3]))) # (!x[1] & (!x[2] & x[3]))));


--A1L1 is ceil_log2~5
A1L1 = (A1L2 & !x[5]);


--A1L21 is ceil_log2~51
A1L21 = (A1L1 & (!x[6] & (!x[7] & !x[4])));


--A1L4 is ceil_log2~17
A1L4 = (x[2] & (((!x[3])))) # (!x[2] & ((x[0] & (x[1] & !x[3])) # (!x[0] & (!x[1] & x[3]))));


--A1L3 is ceil_log2~15
A1L3 = (A1L4 & !x[5]);


--A1L22 is ceil_log2~52
A1L22 = (A1L3 & (!x[6] & (!x[7] & !x[4])));


--A1L23 is ceil_log2~53
A1L23 = (A1L5) # ((x[4]) # ((x[3]) # (x[6])));


--A1L5 is ceil_log2~25
A1L5 = (x[5]) # ((x[2] & ((x[1]) # (x[0]))));


--A1L44 is ~GND
A1L44 = GND;


--A1L18 is ceil_log2~48_wirecell
A1L18 = !A1L17;


