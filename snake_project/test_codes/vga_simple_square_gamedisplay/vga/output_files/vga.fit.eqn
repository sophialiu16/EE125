-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--A1L170 is Add6~1 at LABCELL_X21_Y43_N45
A1L170_adder_eqn = ( GND ) + ( A1L180 ) + ( A1L179 );
A1L170 = SUM(A1L170_adder_eqn);


--A1L122 is Add4~1 at LABCELL_X25_Y43_N39
A1L122_adder_eqn = ( row_counter[3] ) + ( col_counter[3] ) + ( A1L143 );
A1L122 = SUM(A1L122_adder_eqn);

--A1L123 is Add4~2 at LABCELL_X25_Y43_N39
A1L123_adder_eqn = ( row_counter[3] ) + ( col_counter[3] ) + ( A1L143 );
A1L123 = CARRY(A1L123_adder_eqn);


--A1L126 is Add4~5 at LABCELL_X25_Y43_N42
A1L126_adder_eqn = ( row_counter[4] ) + ( col_counter[4] ) + ( A1L123 );
A1L126 = SUM(A1L126_adder_eqn);

--A1L127 is Add4~6 at LABCELL_X25_Y43_N42
A1L127_adder_eqn = ( row_counter[4] ) + ( col_counter[4] ) + ( A1L123 );
A1L127 = CARRY(A1L127_adder_eqn);


--A1L130 is Add4~9 at LABCELL_X25_Y43_N45
A1L130_adder_eqn = ( GND ) + ( GND ) + ( A1L127 );
A1L130 = SUM(A1L130_adder_eqn);


--A1L134 is Add4~13 at LABCELL_X25_Y43_N30
A1L134_adder_eqn = ( col_counter[0] ) + ( row_counter[0] ) + ( !VCC );
A1L134 = SUM(A1L134_adder_eqn);

--A1L135 is Add4~14 at LABCELL_X25_Y43_N30
A1L135_adder_eqn = ( col_counter[0] ) + ( row_counter[0] ) + ( !VCC );
A1L135 = CARRY(A1L135_adder_eqn);


--A1L138 is Add4~17 at LABCELL_X25_Y43_N33
A1L138_adder_eqn = ( col_counter[1] ) + ( row_counter[1] ) + ( A1L135 );
A1L138 = SUM(A1L138_adder_eqn);

--A1L139 is Add4~18 at LABCELL_X25_Y43_N33
A1L139_adder_eqn = ( col_counter[1] ) + ( row_counter[1] ) + ( A1L135 );
A1L139 = CARRY(A1L139_adder_eqn);


--A1L142 is Add4~21 at LABCELL_X25_Y43_N36
A1L142_adder_eqn = ( col_counter[2] ) + ( row_counter[2] ) + ( A1L139 );
A1L142 = SUM(A1L142_adder_eqn);

--A1L143 is Add4~22 at LABCELL_X25_Y43_N36
A1L143_adder_eqn = ( col_counter[2] ) + ( row_counter[2] ) + ( A1L139 );
A1L143 = CARRY(A1L143_adder_eqn);


--A1L146 is Add5~1 at LABCELL_X21_Y43_N9
A1L146_adder_eqn = ( !col_counter[3] $ (row_counter[3]) ) + ( A1L168 ) + ( A1L167 );
A1L146 = SUM(A1L146_adder_eqn);

--A1L147 is Add5~2 at LABCELL_X21_Y43_N9
A1L147_adder_eqn = ( !col_counter[3] $ (row_counter[3]) ) + ( A1L168 ) + ( A1L167 );
A1L147 = CARRY(A1L147_adder_eqn);

--A1L148 is Add5~3 at LABCELL_X21_Y43_N9
A1L148_share_eqn = (!col_counter[3] & row_counter[3]);
A1L148 = SHARE(A1L148_share_eqn);


--A1L150 is Add5~5 at LABCELL_X21_Y43_N12
A1L150_adder_eqn = ( !col_counter[4] $ (row_counter[4]) ) + ( A1L148 ) + ( A1L147 );
A1L150 = SUM(A1L150_adder_eqn);

--A1L151 is Add5~6 at LABCELL_X21_Y43_N12
A1L151_adder_eqn = ( !col_counter[4] $ (row_counter[4]) ) + ( A1L148 ) + ( A1L147 );
A1L151 = CARRY(A1L151_adder_eqn);

--A1L152 is Add5~7 at LABCELL_X21_Y43_N12
A1L152_share_eqn = (!col_counter[4] & row_counter[4]);
A1L152 = SHARE(A1L152_share_eqn);


--A1L154 is Add5~9 at LABCELL_X21_Y43_N15
A1L154_adder_eqn = ( GND ) + ( A1L152 ) + ( A1L151 );
A1L154 = SUM(A1L154_adder_eqn);


--A1L158 is Add5~13 at LABCELL_X21_Y43_N0
A1L158_adder_eqn = ( !row_counter[0] $ (!col_counter[0]) ) + ( !VCC ) + ( !VCC );
A1L158 = SUM(A1L158_adder_eqn);

--A1L159 is Add5~14 at LABCELL_X21_Y43_N0
A1L159_adder_eqn = ( !row_counter[0] $ (!col_counter[0]) ) + ( !VCC ) + ( !VCC );
A1L159 = CARRY(A1L159_adder_eqn);

--A1L160 is Add5~15 at LABCELL_X21_Y43_N0
A1L160_share_eqn = (!col_counter[0]) # (row_counter[0]);
A1L160 = SHARE(A1L160_share_eqn);


--A1L162 is Add5~17 at LABCELL_X21_Y43_N3
A1L162_adder_eqn = ( !row_counter[1] $ (col_counter[1]) ) + ( A1L160 ) + ( A1L159 );
A1L162 = SUM(A1L162_adder_eqn);

--A1L163 is Add5~18 at LABCELL_X21_Y43_N3
A1L163_adder_eqn = ( !row_counter[1] $ (col_counter[1]) ) + ( A1L160 ) + ( A1L159 );
A1L163 = CARRY(A1L163_adder_eqn);

--A1L164 is Add5~19 at LABCELL_X21_Y43_N3
A1L164_share_eqn = (row_counter[1] & !col_counter[1]);
A1L164 = SHARE(A1L164_share_eqn);


--A1L166 is Add5~21 at LABCELL_X21_Y43_N6
A1L166_adder_eqn = ( !row_counter[2] $ (col_counter[2]) ) + ( A1L164 ) + ( A1L163 );
A1L166 = SUM(A1L166_adder_eqn);

--A1L167 is Add5~22 at LABCELL_X21_Y43_N6
A1L167_adder_eqn = ( !row_counter[2] $ (col_counter[2]) ) + ( A1L164 ) + ( A1L163 );
A1L167 = CARRY(A1L167_adder_eqn);

--A1L168 is Add5~23 at LABCELL_X21_Y43_N6
A1L168_share_eqn = (row_counter[2] & !col_counter[2]);
A1L168 = SHARE(A1L168_share_eqn);


--A1L174 is Add6~5 at LABCELL_X21_Y43_N39
A1L174_adder_eqn = ( !col_counter[3] $ (row_counter[3]) ) + ( A1L192 ) + ( A1L191 );
A1L174 = SUM(A1L174_adder_eqn);

--A1L175 is Add6~6 at LABCELL_X21_Y43_N39
A1L175_adder_eqn = ( !col_counter[3] $ (row_counter[3]) ) + ( A1L192 ) + ( A1L191 );
A1L175 = CARRY(A1L175_adder_eqn);

--A1L176 is Add6~7 at LABCELL_X21_Y43_N39
A1L176_share_eqn = (col_counter[3] & !row_counter[3]);
A1L176 = SHARE(A1L176_share_eqn);


--A1L178 is Add6~9 at LABCELL_X21_Y43_N42
A1L178_adder_eqn = ( !col_counter[4] $ (row_counter[4]) ) + ( A1L176 ) + ( A1L175 );
A1L178 = SUM(A1L178_adder_eqn);

--A1L179 is Add6~10 at LABCELL_X21_Y43_N42
A1L179_adder_eqn = ( !col_counter[4] $ (row_counter[4]) ) + ( A1L176 ) + ( A1L175 );
A1L179 = CARRY(A1L179_adder_eqn);

--A1L180 is Add6~11 at LABCELL_X21_Y43_N42
A1L180_share_eqn = (col_counter[4] & !row_counter[4]);
A1L180 = SHARE(A1L180_share_eqn);


--A1L182 is Add6~13 at LABCELL_X21_Y43_N30
A1L182_adder_eqn = ( !row_counter[0] $ (!col_counter[0]) ) + ( !VCC ) + ( !VCC );
A1L182 = SUM(A1L182_adder_eqn);

--A1L183 is Add6~14 at LABCELL_X21_Y43_N30
A1L183_adder_eqn = ( !row_counter[0] $ (!col_counter[0]) ) + ( !VCC ) + ( !VCC );
A1L183 = CARRY(A1L183_adder_eqn);

--A1L184 is Add6~15 at LABCELL_X21_Y43_N30
A1L184_share_eqn = (!row_counter[0]) # (col_counter[0]);
A1L184 = SHARE(A1L184_share_eqn);


--A1L186 is Add6~17 at LABCELL_X21_Y43_N33
A1L186_adder_eqn = ( !row_counter[1] $ (col_counter[1]) ) + ( A1L184 ) + ( A1L183 );
A1L186 = SUM(A1L186_adder_eqn);

--A1L187 is Add6~18 at LABCELL_X21_Y43_N33
A1L187_adder_eqn = ( !row_counter[1] $ (col_counter[1]) ) + ( A1L184 ) + ( A1L183 );
A1L187 = CARRY(A1L187_adder_eqn);

--A1L188 is Add6~19 at LABCELL_X21_Y43_N33
A1L188_share_eqn = (!row_counter[1] & col_counter[1]);
A1L188 = SHARE(A1L188_share_eqn);


--A1L190 is Add6~21 at LABCELL_X21_Y43_N36
A1L190_adder_eqn = ( !row_counter[2] $ (col_counter[2]) ) + ( A1L188 ) + ( A1L187 );
A1L190 = SUM(A1L190_adder_eqn);

--A1L191 is Add6~22 at LABCELL_X21_Y43_N36
A1L191_adder_eqn = ( !row_counter[2] $ (col_counter[2]) ) + ( A1L188 ) + ( A1L187 );
A1L191 = CARRY(A1L191_adder_eqn);

--A1L192 is Add6~23 at LABCELL_X21_Y43_N36
A1L192_share_eqn = (!row_counter[2] & col_counter[2]);
A1L192 = SHARE(A1L192_share_eqn);


--A1L2 is Add0~1 at LABCELL_X20_Y42_N54
A1L2_adder_eqn = ( Hcount[8] ) + ( GND ) + ( A1L31 );
A1L2 = SUM(A1L2_adder_eqn);

--A1L3 is Add0~2 at LABCELL_X20_Y42_N54
A1L3_adder_eqn = ( Hcount[8] ) + ( GND ) + ( A1L31 );
A1L3 = CARRY(A1L3_adder_eqn);


--A1L6 is Add0~5 at LABCELL_X20_Y42_N57
A1L6_adder_eqn = ( Hcount[9] ) + ( GND ) + ( A1L3 );
A1L6 = SUM(A1L6_adder_eqn);


--A1L10 is Add0~9 at LABCELL_X20_Y42_N30
A1L10_adder_eqn = ( Hcount[0] ) + ( VCC ) + ( !VCC );
A1L10 = SUM(A1L10_adder_eqn);

--A1L11 is Add0~10 at LABCELL_X20_Y42_N30
A1L11_adder_eqn = ( Hcount[0] ) + ( VCC ) + ( !VCC );
A1L11 = CARRY(A1L11_adder_eqn);


--A1L14 is Add0~13 at LABCELL_X20_Y42_N33
A1L14_adder_eqn = ( Hcount[1] ) + ( GND ) + ( A1L11 );
A1L14 = SUM(A1L14_adder_eqn);

--A1L15 is Add0~14 at LABCELL_X20_Y42_N33
A1L15_adder_eqn = ( Hcount[1] ) + ( GND ) + ( A1L11 );
A1L15 = CARRY(A1L15_adder_eqn);


--A1L18 is Add0~17 at LABCELL_X20_Y42_N36
A1L18_adder_eqn = ( Hcount[2] ) + ( GND ) + ( A1L15 );
A1L18 = SUM(A1L18_adder_eqn);

--A1L19 is Add0~18 at LABCELL_X20_Y42_N36
A1L19_adder_eqn = ( Hcount[2] ) + ( GND ) + ( A1L15 );
A1L19 = CARRY(A1L19_adder_eqn);


--A1L22 is Add0~21 at LABCELL_X20_Y42_N39
A1L22_adder_eqn = ( Hcount[3] ) + ( GND ) + ( A1L19 );
A1L22 = SUM(A1L22_adder_eqn);

--A1L23 is Add0~22 at LABCELL_X20_Y42_N39
A1L23_adder_eqn = ( Hcount[3] ) + ( GND ) + ( A1L19 );
A1L23 = CARRY(A1L23_adder_eqn);


--A1L26 is Add0~25 at LABCELL_X20_Y42_N48
A1L26_adder_eqn = ( Hcount[6] ) + ( GND ) + ( A1L39 );
A1L26 = SUM(A1L26_adder_eqn);

--A1L27 is Add0~26 at LABCELL_X20_Y42_N48
A1L27_adder_eqn = ( Hcount[6] ) + ( GND ) + ( A1L39 );
A1L27 = CARRY(A1L27_adder_eqn);


--A1L30 is Add0~29 at LABCELL_X20_Y42_N51
A1L30_adder_eqn = ( Hcount[7] ) + ( GND ) + ( A1L27 );
A1L30 = SUM(A1L30_adder_eqn);

--A1L31 is Add0~30 at LABCELL_X20_Y42_N51
A1L31_adder_eqn = ( Hcount[7] ) + ( GND ) + ( A1L27 );
A1L31 = CARRY(A1L31_adder_eqn);


--A1L34 is Add0~33 at LABCELL_X20_Y42_N42
A1L34_adder_eqn = ( Hcount[4] ) + ( GND ) + ( A1L23 );
A1L34 = SUM(A1L34_adder_eqn);

--A1L35 is Add0~34 at LABCELL_X20_Y42_N42
A1L35_adder_eqn = ( Hcount[4] ) + ( GND ) + ( A1L23 );
A1L35 = CARRY(A1L35_adder_eqn);


--A1L38 is Add0~37 at LABCELL_X20_Y42_N45
A1L38_adder_eqn = ( Hcount[5] ) + ( GND ) + ( A1L35 );
A1L38 = SUM(A1L38_adder_eqn);

--A1L39 is Add0~38 at LABCELL_X20_Y42_N45
A1L39_adder_eqn = ( Hcount[5] ) + ( GND ) + ( A1L35 );
A1L39 = CARRY(A1L39_adder_eqn);


--A1L42 is Add1~1 at MLABCELL_X23_Y43_N30
A1L42_adder_eqn = ( Vcount[0] ) + ( VCC ) + ( !VCC );
A1L42 = SUM(A1L42_adder_eqn);

--A1L43 is Add1~2 at MLABCELL_X23_Y43_N30
A1L43_adder_eqn = ( Vcount[0] ) + ( VCC ) + ( !VCC );
A1L43 = CARRY(A1L43_adder_eqn);


--A1L46 is Add1~5 at MLABCELL_X23_Y43_N45
A1L46_adder_eqn = ( Vcount[5] ) + ( GND ) + ( A1L59 );
A1L46 = SUM(A1L46_adder_eqn);

--A1L47 is Add1~6 at MLABCELL_X23_Y43_N45
A1L47_adder_eqn = ( Vcount[5] ) + ( GND ) + ( A1L59 );
A1L47 = CARRY(A1L47_adder_eqn);


--A1L50 is Add1~9 at MLABCELL_X23_Y43_N57
A1L50_adder_eqn = ( Vcount[9] ) + ( GND ) + ( A1L71 );
A1L50 = SUM(A1L50_adder_eqn);


--A1L54 is Add1~13 at MLABCELL_X23_Y43_N39
A1L54_adder_eqn = ( Vcount[3] ) + ( GND ) + ( A1L79 );
A1L54 = SUM(A1L54_adder_eqn);

--A1L55 is Add1~14 at MLABCELL_X23_Y43_N39
A1L55_adder_eqn = ( Vcount[3] ) + ( GND ) + ( A1L79 );
A1L55 = CARRY(A1L55_adder_eqn);


--A1L58 is Add1~17 at MLABCELL_X23_Y43_N42
A1L58_adder_eqn = ( Vcount[4] ) + ( GND ) + ( A1L55 );
A1L58 = SUM(A1L58_adder_eqn);

--A1L59 is Add1~18 at MLABCELL_X23_Y43_N42
A1L59_adder_eqn = ( Vcount[4] ) + ( GND ) + ( A1L55 );
A1L59 = CARRY(A1L59_adder_eqn);


--A1L62 is Add1~21 at MLABCELL_X23_Y43_N48
A1L62_adder_eqn = ( Vcount[6] ) + ( GND ) + ( A1L47 );
A1L62 = SUM(A1L62_adder_eqn);

--A1L63 is Add1~22 at MLABCELL_X23_Y43_N48
A1L63_adder_eqn = ( Vcount[6] ) + ( GND ) + ( A1L47 );
A1L63 = CARRY(A1L63_adder_eqn);


--A1L66 is Add1~25 at MLABCELL_X23_Y43_N51
A1L66_adder_eqn = ( Vcount[7] ) + ( GND ) + ( A1L63 );
A1L66 = SUM(A1L66_adder_eqn);

--A1L67 is Add1~26 at MLABCELL_X23_Y43_N51
A1L67_adder_eqn = ( Vcount[7] ) + ( GND ) + ( A1L63 );
A1L67 = CARRY(A1L67_adder_eqn);


--A1L70 is Add1~29 at MLABCELL_X23_Y43_N54
A1L70_adder_eqn = ( Vcount[8] ) + ( GND ) + ( A1L67 );
A1L70 = SUM(A1L70_adder_eqn);

--A1L71 is Add1~30 at MLABCELL_X23_Y43_N54
A1L71_adder_eqn = ( Vcount[8] ) + ( GND ) + ( A1L67 );
A1L71 = CARRY(A1L71_adder_eqn);


--A1L74 is Add1~33 at MLABCELL_X23_Y43_N33
A1L74_adder_eqn = ( Vcount[1] ) + ( GND ) + ( A1L43 );
A1L74 = SUM(A1L74_adder_eqn);

--A1L75 is Add1~34 at MLABCELL_X23_Y43_N33
A1L75_adder_eqn = ( Vcount[1] ) + ( GND ) + ( A1L43 );
A1L75 = CARRY(A1L75_adder_eqn);


--A1L78 is Add1~37 at MLABCELL_X23_Y43_N36
A1L78_adder_eqn = ( Vcount[2] ) + ( GND ) + ( A1L75 );
A1L78 = SUM(A1L78_adder_eqn);

--A1L79 is Add1~38 at MLABCELL_X23_Y43_N36
A1L79_adder_eqn = ( Vcount[2] ) + ( GND ) + ( A1L75 );
A1L79 = CARRY(A1L79_adder_eqn);


--A1L102 is Add3~1 at MLABCELL_X18_Y42_N12
A1L102_adder_eqn = ( col_counter[5] ) + ( GND ) + ( A1L107 );
A1L102 = SUM(A1L102_adder_eqn);


--A1L82 is Add2~1 at LABCELL_X25_Y43_N12
A1L82_adder_eqn = ( row_counter[5] ) + ( GND ) + ( A1L91 );
A1L82 = SUM(A1L82_adder_eqn);


--Hcount[8] is Hcount[8] at FF_X20_Y42_N58
--register power-up is low

Hcount[8] = DFFEAS( , A1L270Q,  ,  ,  , A1L2,  , A1L224, VCC);


--Hcount[9] is Hcount[9] at FF_X20_Y42_N55
--register power-up is low

Hcount[9] = DFFEAS( , A1L270Q,  ,  ,  , A1L6,  , A1L224, VCC);


--Hcount[0] is Hcount[0] at FF_X20_Y42_N2
--register power-up is low

Hcount[0] = DFFEAS(A1L246, A1L270Q,  ,  ,  ,  ,  , A1L224,  );


--Hcount[1] is Hcount[1] at FF_X20_Y42_N14
--register power-up is low

Hcount[1] = DFFEAS( , A1L270Q,  ,  ,  , A1L14,  , A1L224, VCC);


--Hcount[2] is Hcount[2] at FF_X20_Y42_N23
--register power-up is low

Hcount[2] = DFFEAS(A1L249, A1L270Q,  ,  ,  ,  ,  , A1L224,  );


--Hcount[3] is Hcount[3] at FF_X20_Y42_N29
--register power-up is low

Hcount[3] = DFFEAS( , A1L270Q,  ,  ,  , A1L22,  , A1L224, VCC);


--Hcount[6] is Hcount[6] at FF_X20_Y42_N17
--register power-up is low

Hcount[6] = DFFEAS( , A1L270Q,  ,  ,  , A1L26,  , A1L224, VCC);


--Hcount[7] is Hcount[7] at FF_X20_Y42_N26
--register power-up is low

Hcount[7] = DFFEAS( , A1L270Q,  ,  ,  , A1L30,  , A1L224, VCC);


--Hcount[4] is Hcount[4] at FF_X20_Y42_N20
--register power-up is low

Hcount[4] = DFFEAS(A1L252, A1L270Q,  ,  ,  ,  ,  , A1L224,  );


--Hcount[5] is Hcount[5] at FF_X20_Y42_N5
--register power-up is low

Hcount[5] = DFFEAS( , A1L270Q,  ,  ,  , A1L38,  , A1L224, VCC);


--Vcount[0] is Vcount[0] at FF_X23_Y43_N29
--register power-up is low

Vcount[0] = DFFEAS( , !A1L261Q,  ,  ,  , A1L42,  , A1L230, VCC);


--Vcount[5] is Vcount[5] at FF_X23_Y43_N23
--register power-up is low

Vcount[5] = DFFEAS(A1L305, !A1L261Q,  ,  ,  ,  ,  , A1L230,  );


--Vcount[9] is Vcount[9] at FF_X23_Y43_N11
--register power-up is low

Vcount[9] = DFFEAS( , !A1L261Q,  ,  ,  , A1L50,  , A1L230, VCC);


--Vcount[3] is Vcount[3] at FF_X23_Y43_N14
--register power-up is low

Vcount[3] = DFFEAS( , !A1L261Q,  ,  ,  , A1L54,  , A1L230, VCC);


--Vcount[4] is Vcount[4] at FF_X23_Y43_N7
--register power-up is low

Vcount[4] = DFFEAS( , !A1L261Q,  ,  ,  , A1L58,  , A1L230, VCC);


--Vcount[6] is Vcount[6] at FF_X23_Y43_N17
--register power-up is low

Vcount[6] = DFFEAS(A1L307, !A1L261Q,  ,  ,  ,  ,  , A1L230,  );


--Vcount[7] is Vcount[7] at FF_X23_Y43_N2
--register power-up is low

Vcount[7] = DFFEAS(A1L309, !A1L261Q,  ,  ,  ,  ,  , A1L230,  );


--Vcount[8] is Vcount[8] at FF_X23_Y43_N26
--register power-up is low

Vcount[8] = DFFEAS( , !A1L261Q,  ,  ,  , A1L70,  , A1L230, VCC);


--Vcount[1] is Vcount[1] at FF_X23_Y43_N5
--register power-up is low

Vcount[1] = DFFEAS(A1L299, !A1L261Q,  ,  ,  ,  ,  , A1L230,  );


--Vcount[2] is Vcount[2] at FF_X23_Y43_N20
--register power-up is low

Vcount[2] = DFFEAS(A1L301, !A1L261Q,  ,  ,  ,  ,  , A1L230,  );


--A1L106 is Add3~5 at MLABCELL_X18_Y42_N9
A1L106_adder_eqn = ( col_counter[4] ) + ( GND ) + ( A1L111 );
A1L106 = SUM(A1L106_adder_eqn);

--A1L107 is Add3~6 at MLABCELL_X18_Y42_N9
A1L107_adder_eqn = ( col_counter[4] ) + ( GND ) + ( A1L111 );
A1L107 = CARRY(A1L107_adder_eqn);


--A1L110 is Add3~9 at MLABCELL_X18_Y42_N6
A1L110_adder_eqn = ( col_counter[3] ) + ( GND ) + ( A1L119 );
A1L110 = SUM(A1L110_adder_eqn);

--A1L111 is Add3~10 at MLABCELL_X18_Y42_N6
A1L111_adder_eqn = ( col_counter[3] ) + ( GND ) + ( A1L119 );
A1L111 = CARRY(A1L111_adder_eqn);


--A1L86 is Add2~5 at LABCELL_X25_Y43_N6
A1L86_adder_eqn = ( row_counter[3] ) + ( GND ) + ( A1L99 );
A1L86 = SUM(A1L86_adder_eqn);

--A1L87 is Add2~6 at LABCELL_X25_Y43_N6
A1L87_adder_eqn = ( row_counter[3] ) + ( GND ) + ( A1L99 );
A1L87 = CARRY(A1L87_adder_eqn);


--A1L90 is Add2~9 at LABCELL_X25_Y43_N9
A1L90_adder_eqn = ( row_counter[4] ) + ( GND ) + ( A1L87 );
A1L90 = SUM(A1L90_adder_eqn);

--A1L91 is Add2~10 at LABCELL_X25_Y43_N9
A1L91_adder_eqn = ( row_counter[4] ) + ( GND ) + ( A1L87 );
A1L91 = CARRY(A1L91_adder_eqn);


--A1L114 is Add3~13 at MLABCELL_X18_Y42_N0
A1L114_adder_eqn = ( A1L211Q ) + ( A1L208Q ) + ( !VCC );
A1L114 = SUM(A1L114_adder_eqn);

--A1L115 is Add3~14 at MLABCELL_X18_Y42_N0
A1L115_adder_eqn = ( A1L211Q ) + ( A1L208Q ) + ( !VCC );
A1L115 = CARRY(A1L115_adder_eqn);


--A1L94 is Add2~13 at LABCELL_X25_Y43_N0
A1L94_adder_eqn = ( row_counter[0] ) + ( row_counter[1] ) + ( !VCC );
A1L94 = SUM(A1L94_adder_eqn);

--A1L95 is Add2~14 at LABCELL_X25_Y43_N0
A1L95_adder_eqn = ( row_counter[0] ) + ( row_counter[1] ) + ( !VCC );
A1L95 = CARRY(A1L95_adder_eqn);


--A1L118 is Add3~17 at MLABCELL_X18_Y42_N3
A1L118_adder_eqn = ( col_counter[2] ) + ( GND ) + ( A1L115 );
A1L118 = SUM(A1L118_adder_eqn);

--A1L119 is Add3~18 at MLABCELL_X18_Y42_N3
A1L119_adder_eqn = ( col_counter[2] ) + ( GND ) + ( A1L115 );
A1L119 = CARRY(A1L119_adder_eqn);


--A1L98 is Add2~17 at LABCELL_X25_Y43_N3
A1L98_adder_eqn = ( row_counter[2] ) + ( GND ) + ( A1L95 );
A1L98 = SUM(A1L98_adder_eqn);

--A1L99 is Add2~18 at LABCELL_X25_Y43_N3
A1L99_adder_eqn = ( row_counter[2] ) + ( GND ) + ( A1L95 );
A1L99 = CARRY(A1L99_adder_eqn);


--A1L270Q is pixel_clk~reg0 at FF_X20_Y42_N8
--register power-up is low

A1L270Q = DFFEAS( , A1L204,  ,  ,  , A1L268,  ,  , VCC);


--A1L261Q is Hsync~reg0 at FF_X18_Y42_N38
--register power-up is low

A1L261Q = DFFEAS(A1L262, A1L270Q,  ,  ,  ,  ,  ,  ,  );


--A1L315Q is Vsync~reg0 at FF_X24_Y43_N8
--register power-up is low

A1L315Q = DFFEAS(A1L316, !A1L261Q,  ,  ,  ,  ,  ,  ,  );


--col_counter[5] is col_counter[5] at FF_X18_Y42_N2
--register power-up is low

col_counter[5] = DFFEAS( , A1L270Q, A1L261Q,  , Hactive, A1L102,  ,  , VCC);


--A1L289 is R~0 at LABCELL_X25_Y43_N54
A1L289 = ( A1L130 & ( A1L122 & ( (A1L126 & (((A1L134) # (A1L142)) # (A1L138))) ) ) );


--Hactive is Hactive at FF_X19_Y42_N23
--register power-up is low

Hactive = DFFEAS( , A1L270Q,  ,  ,  , A1L243,  ,  , VCC);


--Vactive is Vactive at FF_X24_Y43_N5
--register power-up is low

Vactive = DFFEAS( , !A1L261Q,  ,  ,  , A1L295,  ,  , VCC);


--A1L290 is R~1 at LABCELL_X25_Y43_N24
A1L290 = ( A1L130 & ( (Vactive & Hactive) ) ) # ( !A1L130 & ( (Vactive & (Hactive & ((A1L126) # (A1L122)))) ) );


--A1L291 is R~2 at LABCELL_X21_Y43_N54
A1L291 = ( A1L162 & ( A1L154 & ( (A1L146 & A1L150) ) ) ) # ( !A1L162 & ( A1L154 & ( (A1L146 & (A1L150 & ((A1L158) # (A1L166)))) ) ) );


--A1L292 is R~3 at LABCELL_X21_Y43_N48
A1L292 = ( A1L190 & ( A1L182 & ( (A1L174 & A1L178) ) ) ) # ( !A1L190 & ( A1L182 & ( (A1L174 & A1L178) ) ) ) # ( A1L190 & ( !A1L182 & ( (A1L174 & A1L178) ) ) ) # ( !A1L190 & ( !A1L182 & ( (A1L174 & (A1L186 & A1L178)) ) ) );


--A1L293 is R~4 at LABCELL_X25_Y43_N48
A1L293 = ( !A1L289 & ( A1L170 & ( (!A1L291 & (col_counter[5] & (A1L290 & !A1L292))) ) ) ) # ( !A1L289 & ( !A1L170 & ( (!A1L291 & (col_counter[5] & A1L290)) ) ) );


--row_counter[5] is row_counter[5] at FF_X24_Y43_N16
--register power-up is low

row_counter[5] = DFFEAS(A1L288, A1L261Q, A1L315Q,  , Vactive,  ,  ,  ,  );


--A1L241 is G~0 at LABCELL_X25_Y43_N18
A1L241 = ( !A1L289 & ( A1L290 & ( (!A1L291 & (row_counter[5] & ((!A1L292) # (!A1L170)))) ) ) );


--A1L216 is Equal0~0 at LABCELL_X19_Y42_N36
A1L216 = ( !A1L2 & ( !A1L6 & ( (!A1L14 & (!A1L10 & (!A1L22 & !A1L18))) ) ) );


--A1L220 is Equal1~0 at LABCELL_X19_Y42_N51
A1L220 = ( A1L34 & ( !A1L38 & ( (!A1L26 & A1L30) ) ) );


--A1L221 is Equal1~1 at LABCELL_X19_Y42_N27
A1L221 = ( A1L34 & ( !A1L38 ) );


--A1L217 is Equal0~1 at LABCELL_X19_Y42_N18
A1L217 = ( !A1L18 & ( !A1L22 & ( (!A1L10 & !A1L14) ) ) );


--A1L222 is Equal2~0 at LABCELL_X19_Y42_N33
A1L222 = ( A1L6 & ( A1L217 & ( (A1L221 & (!A1L26 & (A1L2 & !A1L30))) ) ) );


--A1L224 is Equal3~0 at LABCELL_X20_Y42_N24
A1L224 = ( !A1L30 & ( A1L225 & ( (A1L2 & (A1L38 & (!A1L26 & A1L6))) ) ) );


--A1L218 is Equal0~2 at LABCELL_X19_Y42_N54
A1L218 = ( A1L26 & ( !A1L30 & ( (A1L38 & !A1L34) ) ) );


--A1L259 is Hsync~0 at MLABCELL_X18_Y42_N21
A1L259 = ( A1L224 & ( A1L222 & ( ((A1L218 & A1L216)) # (A1L261Q) ) ) ) # ( !A1L224 & ( A1L222 & ( ((A1L218 & A1L216)) # (A1L261Q) ) ) ) # ( A1L224 & ( !A1L222 & ( (A1L216 & (((A1L261Q & A1L220)) # (A1L218))) ) ) ) # ( !A1L224 & ( !A1L222 & ( ((A1L218 & A1L216)) # (A1L261Q) ) ) );


--A1L226 is Equal4~0 at LABCELL_X24_Y43_N18
A1L226 = ( A1L74 & ( !A1L78 ) );


--A1L227 is Equal4~1 at LABCELL_X24_Y43_N36
A1L227 = ( !A1L54 & ( A1L226 & ( (!A1L70 & (!A1L62 & (!A1L66 & !A1L58))) ) ) );


--A1L230 is Equal7~0 at MLABCELL_X23_Y43_N9
A1L230 = ( A1L50 & ( A1L231 & ( (!A1L66 & (!A1L62 & (!A1L46 & !A1L70))) ) ) );


--A1L313 is Vsync~0 at LABCELL_X24_Y43_N42
A1L313 = ( A1L227 & ( A1L230 & ( (!A1L42 & (!A1L50 & (!A1L46))) # (A1L42 & (A1L315Q & (!A1L50 $ (!A1L46)))) ) ) ) # ( A1L227 & ( !A1L230 & ( ((!A1L42 & (!A1L50 & !A1L46))) # (A1L315Q) ) ) ) # ( !A1L227 & ( !A1L230 & ( A1L315Q ) ) );


--col_counter[3] is col_counter[3] at FF_X18_Y42_N11
--register power-up is low

col_counter[3] = DFFEAS( , A1L270Q, A1L261Q,  , Hactive, A1L110,  ,  , VCC);


--row_counter[3] is row_counter[3] at FF_X24_Y43_N26
--register power-up is low

row_counter[3] = DFFEAS( , A1L261Q, A1L315Q,  , Vactive, A1L86,  ,  , VCC);


--col_counter[4] is col_counter[4] at FF_X18_Y42_N23
--register power-up is low

col_counter[4] = DFFEAS( , A1L270Q, A1L261Q,  , Hactive, A1L106,  ,  , VCC);


--row_counter[4] is row_counter[4] at FF_X24_Y43_N40
--register power-up is low

row_counter[4] = DFFEAS( , A1L261Q, A1L315Q,  , Vactive, A1L90,  ,  , VCC);


--col_counter[0] is col_counter[0] at FF_X18_Y42_N55
--register power-up is low

col_counter[0] = DFFEAS(A1L209, A1L270Q, A1L261Q,  , Hactive,  ,  ,  ,  );


--row_counter[0] is row_counter[0] at FF_X24_Y43_N13
--register power-up is low

row_counter[0] = DFFEAS( , A1L261Q, A1L315Q,  , Vactive, A1L282,  ,  , VCC);


--col_counter[1] is col_counter[1] at FF_X18_Y42_N46
--register power-up is low

col_counter[1] = DFFEAS( , A1L270Q, A1L261Q,  , Hactive, A1L114,  ,  , VCC);


--row_counter[1] is row_counter[1] at FF_X24_Y43_N52
--register power-up is low

row_counter[1] = DFFEAS( , A1L261Q, A1L315Q,  , Vactive, A1L94,  ,  , VCC);


--col_counter[2] is col_counter[2] at FF_X18_Y42_N44
--register power-up is low

col_counter[2] = DFFEAS( , A1L270Q, A1L261Q,  , Hactive, A1L118,  ,  , VCC);


--row_counter[2] is row_counter[2] at FF_X24_Y43_N20
--register power-up is low

row_counter[2] = DFFEAS( , A1L261Q, A1L315Q,  , Vactive, A1L98,  ,  , VCC);


--A1L219 is Equal0~3 at LABCELL_X19_Y42_N42
A1L219 = ( !A1L18 & ( !A1L14 & ( !A1L10 ) ) );


--A1L223 is Equal2~1 at LABCELL_X19_Y42_N15
A1L223 = ( A1L2 & ( !A1L30 & ( (!A1L22 & (A1L219 & (A1L6 & !A1L26))) ) ) );


--A1L243 is Hactive~0 at LABCELL_X19_Y42_N0
A1L243 = ( A1L216 & ( A1L223 & ( (!A1L218 & (((Hactive & !A1L221)) # (A1L220))) # (A1L218 & (((Hactive)))) ) ) ) # ( !A1L216 & ( A1L223 & ( (Hactive & !A1L221) ) ) ) # ( A1L216 & ( !A1L223 & ( ((A1L220 & !A1L218)) # (Hactive) ) ) ) # ( !A1L216 & ( !A1L223 & ( Hactive ) ) );


--A1L228 is Equal4~2 at LABCELL_X24_Y43_N30
A1L228 = ( !A1L62 & ( !A1L70 & ( (!A1L66 & !A1L58) ) ) );


--A1L229 is Equal4~3 at LABCELL_X24_Y43_N54
A1L229 = ( A1L74 & ( !A1L54 & ( !A1L78 ) ) );


--A1L295 is Vactive~0 at LABCELL_X24_Y43_N24
A1L295 = ( A1L229 & ( A1L228 & ( (!Vactive & (A1L42 & (A1L46 & !A1L50))) # (Vactive & ((!A1L42) # ((!A1L50) # (A1L46)))) ) ) ) # ( !A1L229 & ( A1L228 & ( Vactive ) ) ) # ( A1L229 & ( !A1L228 & ( Vactive ) ) ) # ( !A1L229 & ( !A1L228 & ( Vactive ) ) );


--A1L225 is Equal3~1 at LABCELL_X20_Y42_N9
A1L225 = ( !A1L34 & ( !A1L22 & ( (!A1L18 & (!A1L10 & !A1L14)) ) ) );


--A1L231 is Equal7~1 at MLABCELL_X23_Y43_N24
A1L231 = ( A1L78 & ( !A1L58 & ( (A1L42 & (!A1L74 & A1L54)) ) ) );


--A1L268 is pixel_clk~0 at LABCELL_X20_Y42_N15
A1L268 = ( !A1L270Q );


--A1L207 is col_counter[0]~0 at MLABCELL_X18_Y42_N42
A1L207 = !A1L208Q;


--A1L282 is row_counter[0]~0 at LABCELL_X24_Y43_N3
A1L282 = ( !row_counter[0] );


--A1L269 is pixel_clk~output at IOOBUF_X18_Y45_N19
A1L269 = OUTPUT_BUFFER.O(.I(A1L270Q), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--pixel_clk is pixel_clk at PIN_H9
pixel_clk = OUTPUT();


--A1L260 is Hsync~output at IOOBUF_X20_Y45_N36
A1L260 = OUTPUT_BUFFER.O(.I(A1L261Q), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--Hsync is Hsync at PIN_H8
Hsync = OUTPUT();


--A1L314 is Vsync~output at IOOBUF_X20_Y45_N53
A1L314 = OUTPUT_BUFFER.O(.I(A1L315Q), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--Vsync is Vsync at PIN_G8
Vsync = OUTPUT();


--A1L273 is R[0]~output at IOOBUF_X18_Y45_N53
A1L273 = OUTPUT_BUFFER.O(.I(A1L293), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--R[0] is R[0] at PIN_A9
R[0] = OUTPUT();


--A1L275 is R[1]~output at IOOBUF_X16_Y45_N42
A1L275 = OUTPUT_BUFFER.O(.I(A1L293), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--R[1] is R[1] at PIN_B10
R[1] = OUTPUT();


--A1L277 is R[2]~output at IOOBUF_X16_Y45_N59
A1L277 = OUTPUT_BUFFER.O(.I(A1L293), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--R[2] is R[2] at PIN_C9
R[2] = OUTPUT();


--A1L279 is R[3]~output at IOOBUF_X16_Y45_N76
A1L279 = OUTPUT_BUFFER.O(.I(A1L293), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--R[3] is R[3] at PIN_A5
R[3] = OUTPUT();


--A1L234 is G[0]~output at IOOBUF_X22_Y45_N36
A1L234 = OUTPUT_BUFFER.O(.I(A1L241), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--G[0] is G[0] at PIN_L7
G[0] = OUTPUT();


--A1L236 is G[1]~output at IOOBUF_X22_Y45_N53
A1L236 = OUTPUT_BUFFER.O(.I(A1L241), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--G[1] is G[1] at PIN_K7
G[1] = OUTPUT();


--A1L238 is G[2]~output at IOOBUF_X20_Y45_N2
A1L238 = OUTPUT_BUFFER.O(.I(A1L241), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--G[2] is G[2] at PIN_J7
G[2] = OUTPUT();


--A1L240 is G[3]~output at IOOBUF_X20_Y45_N19
A1L240 = OUTPUT_BUFFER.O(.I(A1L241), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--G[3] is G[3] at PIN_J8
G[3] = OUTPUT();


--A1L196 is B[0]~output at IOOBUF_X14_Y45_N36
A1L196 = OUTPUT_BUFFER.O(.I(GND), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--B[0] is B[0] at PIN_B6
B[0] = OUTPUT();


--A1L198 is B[1]~output at IOOBUF_X14_Y45_N53
A1L198 = OUTPUT_BUFFER.O(.I(GND), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--B[1] is B[1] at PIN_B7
B[1] = OUTPUT();


--A1L200 is B[2]~output at IOOBUF_X12_Y45_N2
A1L200 = OUTPUT_BUFFER.O(.I(GND), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--B[2] is B[2] at PIN_A8
B[2] = OUTPUT();


--A1L202 is B[3]~output at IOOBUF_X12_Y45_N19
A1L202 = OUTPUT_BUFFER.O(.I(GND), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--B[3] is B[3] at PIN_A7
B[3] = OUTPUT();


--A1L264 is nblanck~output at IOOBUF_X0_Y19_N39
A1L264 = OUTPUT_BUFFER.O(.I(VCC), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--nblanck is nblanck at PIN_N2
nblanck = OUTPUT();


--A1L266 is nsync~output at IOOBUF_X34_Y0_N53
A1L266 = OUTPUT_BUFFER.O(.I(GND), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--nsync is nsync at PIN_AA14
nsync = OUTPUT();


--A1L204 is clk~input at IOIBUF_X22_Y0_N1
A1L204 = INPUT_BUFFER(.I(clk), );


--clk is clk at PIN_M9
clk = INPUT();



--A1L246 is Hcount[0]~feeder at LABCELL_X20_Y42_N0
A1L246 = ( A1L10 );


--A1L249 is Hcount[2]~feeder at LABCELL_X20_Y42_N21
A1L249 = ( A1L18 );


--A1L252 is Hcount[4]~feeder at LABCELL_X20_Y42_N18
A1L252 = ( A1L34 );


--A1L305 is Vcount[5]~feeder at MLABCELL_X23_Y43_N21
A1L305 = ( A1L46 );


--A1L307 is Vcount[6]~feeder at MLABCELL_X23_Y43_N15
A1L307 = ( A1L62 );


--A1L309 is Vcount[7]~feeder at MLABCELL_X23_Y43_N0
A1L309 = ( A1L66 );


--A1L299 is Vcount[1]~feeder at MLABCELL_X23_Y43_N3
A1L299 = ( A1L74 );


--A1L301 is Vcount[2]~feeder at MLABCELL_X23_Y43_N18
A1L301 = ( A1L78 );


--A1L288 is row_counter[5]~feeder at LABCELL_X24_Y43_N15
A1L288 = ( A1L82 );


--A1L262 is Hsync~reg0feeder at MLABCELL_X18_Y42_N36
A1L262 = ( A1L259 );


--A1L316 is Vsync~reg0feeder at LABCELL_X24_Y43_N6
A1L316 = ( A1L313 );


--A1L209 is col_counter[0]~feeder at MLABCELL_X18_Y42_N54
A1L209 = ( A1L207 );


--A1L208Q is col_counter[0]~DUPLICATE at FF_X18_Y42_N56
--register power-up is low

A1L208Q = DFFEAS(A1L209, A1L270Q, A1L261Q,  , Hactive,  ,  ,  ,  );


--A1L211Q is col_counter[1]~DUPLICATE at FF_X18_Y42_N47
--register power-up is low

A1L211Q = DFFEAS( , A1L270Q, A1L261Q,  , Hactive, A1L114,  ,  , VCC);


