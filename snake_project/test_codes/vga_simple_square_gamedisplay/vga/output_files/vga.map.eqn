-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--A1L2 is Add0~1
A1L2_adder_eqn = ( Hcount[8] ) + ( GND ) + ( A1L31 );
A1L2 = SUM(A1L2_adder_eqn);

--A1L3 is Add0~2
A1L3_adder_eqn = ( Hcount[8] ) + ( GND ) + ( A1L31 );
A1L3 = CARRY(A1L3_adder_eqn);


--A1L6 is Add0~5
A1L6_adder_eqn = ( Hcount[9] ) + ( GND ) + ( A1L3 );
A1L6 = SUM(A1L6_adder_eqn);


--A1L10 is Add0~9
A1L10_adder_eqn = ( Hcount[0] ) + ( VCC ) + ( !VCC );
A1L10 = SUM(A1L10_adder_eqn);

--A1L11 is Add0~10
A1L11_adder_eqn = ( Hcount[0] ) + ( VCC ) + ( !VCC );
A1L11 = CARRY(A1L11_adder_eqn);


--A1L14 is Add0~13
A1L14_adder_eqn = ( Hcount[1] ) + ( GND ) + ( A1L11 );
A1L14 = SUM(A1L14_adder_eqn);

--A1L15 is Add0~14
A1L15_adder_eqn = ( Hcount[1] ) + ( GND ) + ( A1L11 );
A1L15 = CARRY(A1L15_adder_eqn);


--A1L18 is Add0~17
A1L18_adder_eqn = ( Hcount[2] ) + ( GND ) + ( A1L15 );
A1L18 = SUM(A1L18_adder_eqn);

--A1L19 is Add0~18
A1L19_adder_eqn = ( Hcount[2] ) + ( GND ) + ( A1L15 );
A1L19 = CARRY(A1L19_adder_eqn);


--A1L22 is Add0~21
A1L22_adder_eqn = ( Hcount[3] ) + ( GND ) + ( A1L19 );
A1L22 = SUM(A1L22_adder_eqn);

--A1L23 is Add0~22
A1L23_adder_eqn = ( Hcount[3] ) + ( GND ) + ( A1L19 );
A1L23 = CARRY(A1L23_adder_eqn);


--A1L26 is Add0~25
A1L26_adder_eqn = ( Hcount[6] ) + ( GND ) + ( A1L39 );
A1L26 = SUM(A1L26_adder_eqn);

--A1L27 is Add0~26
A1L27_adder_eqn = ( Hcount[6] ) + ( GND ) + ( A1L39 );
A1L27 = CARRY(A1L27_adder_eqn);


--A1L30 is Add0~29
A1L30_adder_eqn = ( Hcount[7] ) + ( GND ) + ( A1L27 );
A1L30 = SUM(A1L30_adder_eqn);

--A1L31 is Add0~30
A1L31_adder_eqn = ( Hcount[7] ) + ( GND ) + ( A1L27 );
A1L31 = CARRY(A1L31_adder_eqn);


--A1L34 is Add0~33
A1L34_adder_eqn = ( Hcount[4] ) + ( GND ) + ( A1L23 );
A1L34 = SUM(A1L34_adder_eqn);

--A1L35 is Add0~34
A1L35_adder_eqn = ( Hcount[4] ) + ( GND ) + ( A1L23 );
A1L35 = CARRY(A1L35_adder_eqn);


--A1L38 is Add0~37
A1L38_adder_eqn = ( Hcount[5] ) + ( GND ) + ( A1L35 );
A1L38 = SUM(A1L38_adder_eqn);

--A1L39 is Add0~38
A1L39_adder_eqn = ( Hcount[5] ) + ( GND ) + ( A1L35 );
A1L39 = CARRY(A1L39_adder_eqn);


--A1L42 is Add1~1
A1L42_adder_eqn = ( Vcount[0] ) + ( VCC ) + ( !VCC );
A1L42 = SUM(A1L42_adder_eqn);

--A1L43 is Add1~2
A1L43_adder_eqn = ( Vcount[0] ) + ( VCC ) + ( !VCC );
A1L43 = CARRY(A1L43_adder_eqn);


--A1L46 is Add1~5
A1L46_adder_eqn = ( Vcount[5] ) + ( GND ) + ( A1L59 );
A1L46 = SUM(A1L46_adder_eqn);

--A1L47 is Add1~6
A1L47_adder_eqn = ( Vcount[5] ) + ( GND ) + ( A1L59 );
A1L47 = CARRY(A1L47_adder_eqn);


--A1L50 is Add1~9
A1L50_adder_eqn = ( Vcount[9] ) + ( GND ) + ( A1L71 );
A1L50 = SUM(A1L50_adder_eqn);


--A1L54 is Add1~13
A1L54_adder_eqn = ( Vcount[3] ) + ( GND ) + ( A1L79 );
A1L54 = SUM(A1L54_adder_eqn);

--A1L55 is Add1~14
A1L55_adder_eqn = ( Vcount[3] ) + ( GND ) + ( A1L79 );
A1L55 = CARRY(A1L55_adder_eqn);


--A1L58 is Add1~17
A1L58_adder_eqn = ( Vcount[4] ) + ( GND ) + ( A1L55 );
A1L58 = SUM(A1L58_adder_eqn);

--A1L59 is Add1~18
A1L59_adder_eqn = ( Vcount[4] ) + ( GND ) + ( A1L55 );
A1L59 = CARRY(A1L59_adder_eqn);


--A1L62 is Add1~21
A1L62_adder_eqn = ( Vcount[6] ) + ( GND ) + ( A1L47 );
A1L62 = SUM(A1L62_adder_eqn);

--A1L63 is Add1~22
A1L63_adder_eqn = ( Vcount[6] ) + ( GND ) + ( A1L47 );
A1L63 = CARRY(A1L63_adder_eqn);


--A1L66 is Add1~25
A1L66_adder_eqn = ( Vcount[7] ) + ( GND ) + ( A1L63 );
A1L66 = SUM(A1L66_adder_eqn);

--A1L67 is Add1~26
A1L67_adder_eqn = ( Vcount[7] ) + ( GND ) + ( A1L63 );
A1L67 = CARRY(A1L67_adder_eqn);


--A1L70 is Add1~29
A1L70_adder_eqn = ( Vcount[8] ) + ( GND ) + ( A1L67 );
A1L70 = SUM(A1L70_adder_eqn);

--A1L71 is Add1~30
A1L71_adder_eqn = ( Vcount[8] ) + ( GND ) + ( A1L67 );
A1L71 = CARRY(A1L71_adder_eqn);


--A1L74 is Add1~33
A1L74_adder_eqn = ( Vcount[1] ) + ( GND ) + ( A1L43 );
A1L74 = SUM(A1L74_adder_eqn);

--A1L75 is Add1~34
A1L75_adder_eqn = ( Vcount[1] ) + ( GND ) + ( A1L43 );
A1L75 = CARRY(A1L75_adder_eqn);


--A1L78 is Add1~37
A1L78_adder_eqn = ( Vcount[2] ) + ( GND ) + ( A1L75 );
A1L78 = SUM(A1L78_adder_eqn);

--A1L79 is Add1~38
A1L79_adder_eqn = ( Vcount[2] ) + ( GND ) + ( A1L75 );
A1L79 = CARRY(A1L79_adder_eqn);


--A1L102 is Add3~1
A1L102_adder_eqn = ( col_counter[5] ) + ( GND ) + ( A1L107 );
A1L102 = SUM(A1L102_adder_eqn);


--A1L82 is Add2~1
A1L82_adder_eqn = ( row_counter[5] ) + ( GND ) + ( A1L87 );
A1L82 = SUM(A1L82_adder_eqn);


--Hcount[8] is Hcount[8]
--register power-up is low

Hcount[8] = DFFEAS(A1L2, A1L177Q,  ,  ,  ,  ,  , A1L143,  );


--Hcount[9] is Hcount[9]
--register power-up is low

Hcount[9] = DFFEAS(A1L6, A1L177Q,  ,  ,  ,  ,  , A1L143,  );


--Hcount[0] is Hcount[0]
--register power-up is low

Hcount[0] = DFFEAS(A1L10, A1L177Q,  ,  ,  ,  ,  , A1L143,  );


--Hcount[1] is Hcount[1]
--register power-up is low

Hcount[1] = DFFEAS(A1L14, A1L177Q,  ,  ,  ,  ,  , A1L143,  );


--Hcount[2] is Hcount[2]
--register power-up is low

Hcount[2] = DFFEAS(A1L18, A1L177Q,  ,  ,  ,  ,  , A1L143,  );


--Hcount[3] is Hcount[3]
--register power-up is low

Hcount[3] = DFFEAS(A1L22, A1L177Q,  ,  ,  ,  ,  , A1L143,  );


--Hcount[6] is Hcount[6]
--register power-up is low

Hcount[6] = DFFEAS(A1L26, A1L177Q,  ,  ,  ,  ,  , A1L143,  );


--Hcount[7] is Hcount[7]
--register power-up is low

Hcount[7] = DFFEAS(A1L30, A1L177Q,  ,  ,  ,  ,  , A1L143,  );


--Hcount[4] is Hcount[4]
--register power-up is low

Hcount[4] = DFFEAS(A1L34, A1L177Q,  ,  ,  ,  ,  , A1L143,  );


--Hcount[5] is Hcount[5]
--register power-up is low

Hcount[5] = DFFEAS(A1L38, A1L177Q,  ,  ,  ,  ,  , A1L143,  );


--Vcount[0] is Vcount[0]
--register power-up is low

Vcount[0] = DFFEAS(A1L42, !A1L172Q,  ,  ,  ,  ,  , A1L149,  );


--Vcount[5] is Vcount[5]
--register power-up is low

Vcount[5] = DFFEAS(A1L46, !A1L172Q,  ,  ,  ,  ,  , A1L149,  );


--Vcount[9] is Vcount[9]
--register power-up is low

Vcount[9] = DFFEAS(A1L50, !A1L172Q,  ,  ,  ,  ,  , A1L149,  );


--Vcount[3] is Vcount[3]
--register power-up is low

Vcount[3] = DFFEAS(A1L54, !A1L172Q,  ,  ,  ,  ,  , A1L149,  );


--Vcount[4] is Vcount[4]
--register power-up is low

Vcount[4] = DFFEAS(A1L58, !A1L172Q,  ,  ,  ,  ,  , A1L149,  );


--Vcount[6] is Vcount[6]
--register power-up is low

Vcount[6] = DFFEAS(A1L62, !A1L172Q,  ,  ,  ,  ,  , A1L149,  );


--Vcount[7] is Vcount[7]
--register power-up is low

Vcount[7] = DFFEAS(A1L66, !A1L172Q,  ,  ,  ,  ,  , A1L149,  );


--Vcount[8] is Vcount[8]
--register power-up is low

Vcount[8] = DFFEAS(A1L70, !A1L172Q,  ,  ,  ,  ,  , A1L149,  );


--Vcount[1] is Vcount[1]
--register power-up is low

Vcount[1] = DFFEAS(A1L74, !A1L172Q,  ,  ,  ,  ,  , A1L149,  );


--Vcount[2] is Vcount[2]
--register power-up is low

Vcount[2] = DFFEAS(A1L78, !A1L172Q,  ,  ,  ,  ,  , A1L149,  );


--A1L106 is Add3~5
A1L106_adder_eqn = ( col_counter[4] ) + ( GND ) + ( A1L111 );
A1L106 = SUM(A1L106_adder_eqn);

--A1L107 is Add3~6
A1L107_adder_eqn = ( col_counter[4] ) + ( GND ) + ( A1L111 );
A1L107 = CARRY(A1L107_adder_eqn);


--A1L86 is Add2~5
A1L86_adder_eqn = ( row_counter[4] ) + ( GND ) + ( A1L91 );
A1L86 = SUM(A1L86_adder_eqn);

--A1L87 is Add2~6
A1L87_adder_eqn = ( row_counter[4] ) + ( GND ) + ( A1L91 );
A1L87 = CARRY(A1L87_adder_eqn);


--A1L110 is Add3~9
A1L110_adder_eqn = ( col_counter[3] ) + ( GND ) + ( A1L115 );
A1L110 = SUM(A1L110_adder_eqn);

--A1L111 is Add3~10
A1L111_adder_eqn = ( col_counter[3] ) + ( GND ) + ( A1L115 );
A1L111 = CARRY(A1L111_adder_eqn);


--A1L90 is Add2~9
A1L90_adder_eqn = ( row_counter[3] ) + ( GND ) + ( A1L95 );
A1L90 = SUM(A1L90_adder_eqn);

--A1L91 is Add2~10
A1L91_adder_eqn = ( row_counter[3] ) + ( GND ) + ( A1L95 );
A1L91 = CARRY(A1L91_adder_eqn);


--A1L114 is Add3~13
A1L114_adder_eqn = ( col_counter[2] ) + ( GND ) + ( A1L119 );
A1L114 = SUM(A1L114_adder_eqn);

--A1L115 is Add3~14
A1L115_adder_eqn = ( col_counter[2] ) + ( GND ) + ( A1L119 );
A1L115 = CARRY(A1L115_adder_eqn);


--A1L94 is Add2~13
A1L94_adder_eqn = ( row_counter[2] ) + ( GND ) + ( A1L99 );
A1L94 = SUM(A1L94_adder_eqn);

--A1L95 is Add2~14
A1L95_adder_eqn = ( row_counter[2] ) + ( GND ) + ( A1L99 );
A1L95 = CARRY(A1L95_adder_eqn);


--A1L118 is Add3~17
A1L118_adder_eqn = ( col_counter[0] ) + ( col_counter[1] ) + ( !VCC );
A1L118 = SUM(A1L118_adder_eqn);

--A1L119 is Add3~18
A1L119_adder_eqn = ( col_counter[0] ) + ( col_counter[1] ) + ( !VCC );
A1L119 = CARRY(A1L119_adder_eqn);


--A1L98 is Add2~17
A1L98_adder_eqn = ( row_counter[0] ) + ( row_counter[1] ) + ( !VCC );
A1L98 = SUM(A1L98_adder_eqn);

--A1L99 is Add2~18
A1L99_adder_eqn = ( row_counter[0] ) + ( row_counter[1] ) + ( !VCC );
A1L99 = CARRY(A1L99_adder_eqn);


--pixel_clk is pixel_clk
pixel_clk = OUTPUT(A1L177Q);


--Hsync is Hsync
Hsync = OUTPUT(A1L172Q);


--Vsync is Vsync
Vsync = OUTPUT(A1L207Q);


--R[0] is R[0]
R[0] = OUTPUT(A1L191);


--R[1] is R[1]
R[1] = OUTPUT(A1L191);


--R[2] is R[2]
R[2] = OUTPUT(A1L191);


--R[3] is R[3]
R[3] = OUTPUT(A1L191);


--G[0] is G[0]
G[0] = OUTPUT(A1L156);


--G[1] is G[1]
G[1] = OUTPUT(A1L156);


--G[2] is G[2]
G[2] = OUTPUT(A1L156);


--G[3] is G[3]
G[3] = OUTPUT(A1L156);


--B[0] is B[0]
B[0] = OUTPUT(A1L208);


--B[1] is B[1]
B[1] = OUTPUT(A1L208);


--B[2] is B[2]
B[2] = OUTPUT(A1L208);


--B[3] is B[3]
B[3] = OUTPUT(A1L208);


--nblanck is nblanck
nblanck = OUTPUT(A1L209);


--nsync is nsync
nsync = OUTPUT(A1L208);


--A1L177Q is pixel_clk~reg0
--register power-up is low

A1L177Q = DFFEAS(A1L176, clk,  ,  ,  ,  ,  ,  ,  );


--A1L172Q is Hsync~reg0
--register power-up is low

A1L172Q = DFFEAS(A1L171, A1L177Q,  ,  ,  ,  ,  ,  ,  );


--A1L207Q is Vsync~reg0
--register power-up is low

A1L207Q = DFFEAS(A1L206, !A1L172Q,  ,  ,  ,  ,  ,  ,  );


--col_counter[5] is col_counter[5]
--register power-up is low

col_counter[5] = DFFEAS(A1L102, A1L177Q, A1L172Q,  , Hactive,  ,  ,  ,  );


--Hactive is Hactive
--register power-up is low

Hactive = DFFEAS(A1L158, A1L177Q,  ,  ,  ,  ,  ,  ,  );


--Vactive is Vactive
--register power-up is low

Vactive = DFFEAS(A1L193, !A1L172Q,  ,  ,  ,  ,  ,  ,  );


--A1L191 is R~0
A1L191 = (col_counter[5] & (Hactive & Vactive));


--row_counter[5] is row_counter[5]
--register power-up is low

row_counter[5] = DFFEAS(A1L82, A1L172Q, A1L207Q,  , Vactive,  ,  ,  ,  );


--A1L156 is G~0
A1L156 = (Hactive & (Vactive & row_counter[5]));


--clk is clk
clk = INPUT();


--A1L135 is Equal0~0
A1L135 = ( !A1L18 & ( !A1L22 & ( (!A1L2 & (!A1L6 & (!A1L10 & !A1L14))) ) ) );


--A1L139 is Equal1~0
A1L139 = (!A1L26 & (A1L30 & (A1L34 & !A1L38)));


--A1L140 is Equal1~1
A1L140 = (A1L34 & !A1L38);


--A1L136 is Equal0~1
A1L136 = (!A1L10 & (!A1L14 & (!A1L18 & !A1L22)));


--A1L141 is Equal2~0
A1L141 = ( A1L140 & ( A1L136 & ( (!A1L26 & (!A1L30 & (A1L2 & A1L6))) ) ) );


--A1L143 is Equal3~0
A1L143 = ( A1L38 & ( A1L144 & ( (!A1L26 & (!A1L30 & (A1L2 & A1L6))) ) ) );


--A1L137 is Equal0~2
A1L137 = (A1L26 & (!A1L30 & (!A1L34 & A1L38)));


--A1L171 is Hsync~0
A1L171 = ( A1L143 & ( A1L137 & ( ((A1L172Q & A1L141)) # (A1L135) ) ) ) # ( !A1L143 & ( A1L137 & ( (A1L135) # (A1L172Q) ) ) ) # ( A1L143 & ( !A1L137 & ( (A1L172Q & (((A1L135 & A1L139)) # (A1L141))) ) ) ) # ( !A1L143 & ( !A1L137 & ( A1L172Q ) ) );


--A1L145 is Equal4~0
A1L145 = (A1L74 & !A1L78);


--A1L146 is Equal4~1
A1L146 = ( !A1L70 & ( A1L145 & ( (!A1L54 & (!A1L58 & (!A1L62 & !A1L66))) ) ) );


--A1L149 is Equal7~0
A1L149 = ( !A1L46 & ( A1L150 & ( (A1L50 & (!A1L66 & (!A1L70 & !A1L62))) ) ) );


--A1L206 is Vsync~0
A1L206 = ( A1L146 & ( A1L149 & ( (!A1L42 & (((!A1L46 & !A1L50)))) # (A1L42 & (A1L207Q & (!A1L46 $ (!A1L50)))) ) ) ) # ( A1L146 & ( !A1L149 & ( ((!A1L42 & (!A1L46 & !A1L50))) # (A1L207Q) ) ) ) # ( !A1L146 & ( !A1L149 & ( A1L207Q ) ) );


--A1L138 is Equal0~3
A1L138 = (!A1L10 & (!A1L14 & !A1L18));


--A1L142 is Equal2~1
A1L142 = ( !A1L22 & ( A1L138 & ( (!A1L26 & (!A1L30 & (A1L2 & A1L6))) ) ) );


--A1L158 is Hactive~0
A1L158 = ( A1L142 & ( A1L137 & ( (Hactive & ((!A1L140) # (A1L135))) ) ) ) # ( !A1L142 & ( A1L137 & ( Hactive ) ) ) # ( A1L142 & ( !A1L137 & ( (!Hactive & (((A1L135 & A1L139)))) # (Hactive & ((!A1L140) # ((A1L135 & A1L139)))) ) ) ) # ( !A1L142 & ( !A1L137 & ( ((A1L135 & A1L139)) # (Hactive) ) ) );


--A1L147 is Equal4~2
A1L147 = (!A1L58 & (!A1L62 & (!A1L66 & !A1L70)));


--A1L148 is Equal4~3
A1L148 = (A1L74 & (!A1L78 & !A1L54));


--A1L193 is Vactive~0
A1L193 = ( A1L147 & ( A1L148 & ( (!Vactive & (A1L42 & (A1L46 & !A1L50))) # (Vactive & ((!A1L42) # ((!A1L50) # (A1L46)))) ) ) ) # ( !A1L147 & ( A1L148 & ( Vactive ) ) ) # ( A1L147 & ( !A1L148 & ( Vactive ) ) ) # ( !A1L147 & ( !A1L148 & ( Vactive ) ) );


--col_counter[4] is col_counter[4]
--register power-up is low

col_counter[4] = DFFEAS(A1L106, A1L177Q, A1L172Q,  , Hactive,  ,  ,  ,  );


--row_counter[4] is row_counter[4]
--register power-up is low

row_counter[4] = DFFEAS(A1L86, A1L172Q, A1L207Q,  , Vactive,  ,  ,  ,  );


--col_counter[3] is col_counter[3]
--register power-up is low

col_counter[3] = DFFEAS(A1L110, A1L177Q, A1L172Q,  , Hactive,  ,  ,  ,  );


--row_counter[3] is row_counter[3]
--register power-up is low

row_counter[3] = DFFEAS(A1L90, A1L172Q, A1L207Q,  , Vactive,  ,  ,  ,  );


--col_counter[2] is col_counter[2]
--register power-up is low

col_counter[2] = DFFEAS(A1L114, A1L177Q, A1L172Q,  , Hactive,  ,  ,  ,  );


--row_counter[2] is row_counter[2]
--register power-up is low

row_counter[2] = DFFEAS(A1L94, A1L172Q, A1L207Q,  , Vactive,  ,  ,  ,  );


--col_counter[0] is col_counter[0]
--register power-up is low

col_counter[0] = DFFEAS(A1L129, A1L177Q, A1L172Q,  , Hactive,  ,  ,  ,  );


--col_counter[1] is col_counter[1]
--register power-up is low

col_counter[1] = DFFEAS(A1L118, A1L177Q, A1L172Q,  , Hactive,  ,  ,  ,  );


--row_counter[0] is row_counter[0]
--register power-up is low

row_counter[0] = DFFEAS(A1L185, A1L172Q, A1L207Q,  , Vactive,  ,  ,  ,  );


--row_counter[1] is row_counter[1]
--register power-up is low

row_counter[1] = DFFEAS(A1L98, A1L172Q, A1L207Q,  , Vactive,  ,  ,  ,  );


--A1L144 is Equal3~1
A1L144 = ( !A1L22 & ( (!A1L34 & (!A1L10 & (!A1L14 & !A1L18))) ) );


--A1L150 is Equal7~1
A1L150 = ( A1L54 & ( (!A1L58 & (A1L42 & (!A1L74 & A1L78))) ) );


--A1L176 is pixel_clk~0
A1L176 = !A1L177Q;


--A1L129 is col_counter[0]~0
A1L129 = !col_counter[0];


--A1L185 is row_counter[0]~0
A1L185 = !row_counter[0];


--A1L208 is ~GND
A1L208 = GND;


--A1L209 is ~VCC
A1L209 = VCC;


