-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--A1L2 is Add0~1
A1L2_adder_eqn = ( Hcount[8] ) + ( GND ) + ( A1L31 );
A1L2 = SUM(A1L2_adder_eqn);

--A1L3 is Add0~2
A1L3_adder_eqn = ( Hcount[8] ) + ( GND ) + ( A1L31 );
A1L3 = CARRY(A1L3_adder_eqn);


--A1L6 is Add0~5
A1L6_adder_eqn = ( Hcount[9] ) + ( GND ) + ( A1L3 );
A1L6 = SUM(A1L6_adder_eqn);


--A1L10 is Add0~9
A1L10_adder_eqn = ( Hcount[0] ) + ( VCC ) + ( !VCC );
A1L10 = SUM(A1L10_adder_eqn);

--A1L11 is Add0~10
A1L11_adder_eqn = ( Hcount[0] ) + ( VCC ) + ( !VCC );
A1L11 = CARRY(A1L11_adder_eqn);


--A1L14 is Add0~13
A1L14_adder_eqn = ( Hcount[1] ) + ( GND ) + ( A1L11 );
A1L14 = SUM(A1L14_adder_eqn);

--A1L15 is Add0~14
A1L15_adder_eqn = ( Hcount[1] ) + ( GND ) + ( A1L11 );
A1L15 = CARRY(A1L15_adder_eqn);


--A1L18 is Add0~17
A1L18_adder_eqn = ( Hcount[2] ) + ( GND ) + ( A1L15 );
A1L18 = SUM(A1L18_adder_eqn);

--A1L19 is Add0~18
A1L19_adder_eqn = ( Hcount[2] ) + ( GND ) + ( A1L15 );
A1L19 = CARRY(A1L19_adder_eqn);


--A1L22 is Add0~21
A1L22_adder_eqn = ( Hcount[3] ) + ( GND ) + ( A1L19 );
A1L22 = SUM(A1L22_adder_eqn);

--A1L23 is Add0~22
A1L23_adder_eqn = ( Hcount[3] ) + ( GND ) + ( A1L19 );
A1L23 = CARRY(A1L23_adder_eqn);


--A1L26 is Add0~25
A1L26_adder_eqn = ( Hcount[6] ) + ( GND ) + ( A1L39 );
A1L26 = SUM(A1L26_adder_eqn);

--A1L27 is Add0~26
A1L27_adder_eqn = ( Hcount[6] ) + ( GND ) + ( A1L39 );
A1L27 = CARRY(A1L27_adder_eqn);


--A1L30 is Add0~29
A1L30_adder_eqn = ( Hcount[7] ) + ( GND ) + ( A1L27 );
A1L30 = SUM(A1L30_adder_eqn);

--A1L31 is Add0~30
A1L31_adder_eqn = ( Hcount[7] ) + ( GND ) + ( A1L27 );
A1L31 = CARRY(A1L31_adder_eqn);


--A1L34 is Add0~33
A1L34_adder_eqn = ( Hcount[4] ) + ( GND ) + ( A1L23 );
A1L34 = SUM(A1L34_adder_eqn);

--A1L35 is Add0~34
A1L35_adder_eqn = ( Hcount[4] ) + ( GND ) + ( A1L23 );
A1L35 = CARRY(A1L35_adder_eqn);


--A1L38 is Add0~37
A1L38_adder_eqn = ( Hcount[5] ) + ( GND ) + ( A1L35 );
A1L38 = SUM(A1L38_adder_eqn);

--A1L39 is Add0~38
A1L39_adder_eqn = ( Hcount[5] ) + ( GND ) + ( A1L35 );
A1L39 = CARRY(A1L39_adder_eqn);


--A1L42 is Add1~1
A1L42_adder_eqn = ( Vcount[0] ) + ( VCC ) + ( !VCC );
A1L42 = SUM(A1L42_adder_eqn);

--A1L43 is Add1~2
A1L43_adder_eqn = ( Vcount[0] ) + ( VCC ) + ( !VCC );
A1L43 = CARRY(A1L43_adder_eqn);


--A1L46 is Add1~5
A1L46_adder_eqn = ( Vcount[5] ) + ( GND ) + ( A1L59 );
A1L46 = SUM(A1L46_adder_eqn);

--A1L47 is Add1~6
A1L47_adder_eqn = ( Vcount[5] ) + ( GND ) + ( A1L59 );
A1L47 = CARRY(A1L47_adder_eqn);


--A1L50 is Add1~9
A1L50_adder_eqn = ( Vcount[9] ) + ( GND ) + ( A1L71 );
A1L50 = SUM(A1L50_adder_eqn);


--A1L54 is Add1~13
A1L54_adder_eqn = ( Vcount[3] ) + ( GND ) + ( A1L79 );
A1L54 = SUM(A1L54_adder_eqn);

--A1L55 is Add1~14
A1L55_adder_eqn = ( Vcount[3] ) + ( GND ) + ( A1L79 );
A1L55 = CARRY(A1L55_adder_eqn);


--A1L58 is Add1~17
A1L58_adder_eqn = ( Vcount[4] ) + ( GND ) + ( A1L55 );
A1L58 = SUM(A1L58_adder_eqn);

--A1L59 is Add1~18
A1L59_adder_eqn = ( Vcount[4] ) + ( GND ) + ( A1L55 );
A1L59 = CARRY(A1L59_adder_eqn);


--A1L62 is Add1~21
A1L62_adder_eqn = ( Vcount[6] ) + ( GND ) + ( A1L47 );
A1L62 = SUM(A1L62_adder_eqn);

--A1L63 is Add1~22
A1L63_adder_eqn = ( Vcount[6] ) + ( GND ) + ( A1L47 );
A1L63 = CARRY(A1L63_adder_eqn);


--A1L66 is Add1~25
A1L66_adder_eqn = ( Vcount[7] ) + ( GND ) + ( A1L63 );
A1L66 = SUM(A1L66_adder_eqn);

--A1L67 is Add1~26
A1L67_adder_eqn = ( Vcount[7] ) + ( GND ) + ( A1L63 );
A1L67 = CARRY(A1L67_adder_eqn);


--A1L70 is Add1~29
A1L70_adder_eqn = ( Vcount[8] ) + ( GND ) + ( A1L67 );
A1L70 = SUM(A1L70_adder_eqn);

--A1L71 is Add1~30
A1L71_adder_eqn = ( Vcount[8] ) + ( GND ) + ( A1L67 );
A1L71 = CARRY(A1L71_adder_eqn);


--A1L74 is Add1~33
A1L74_adder_eqn = ( Vcount[1] ) + ( GND ) + ( A1L43 );
A1L74 = SUM(A1L74_adder_eqn);

--A1L75 is Add1~34
A1L75_adder_eqn = ( Vcount[1] ) + ( GND ) + ( A1L43 );
A1L75 = CARRY(A1L75_adder_eqn);


--A1L78 is Add1~37
A1L78_adder_eqn = ( Vcount[2] ) + ( GND ) + ( A1L75 );
A1L78 = SUM(A1L78_adder_eqn);

--A1L79 is Add1~38
A1L79_adder_eqn = ( Vcount[2] ) + ( GND ) + ( A1L75 );
A1L79 = CARRY(A1L79_adder_eqn);


--A1L82 is Add2~1
A1L82_adder_eqn = ( row_counter[8] ) + ( GND ) + ( A1L87 );
A1L82 = SUM(A1L82_adder_eqn);


--A1L114 is Add3~1
A1L114_adder_eqn = ( col_counter[7] ) + ( GND ) + ( A1L119 );
A1L114 = SUM(A1L114_adder_eqn);

--A1L115 is Add3~2
A1L115_adder_eqn = ( col_counter[7] ) + ( GND ) + ( A1L119 );
A1L115 = CARRY(A1L115_adder_eqn);


--A1L118 is Add3~5
A1L118_adder_eqn = ( col_counter[6] ) + ( GND ) + ( A1L131 );
A1L118 = SUM(A1L118_adder_eqn);

--A1L119 is Add3~6
A1L119_adder_eqn = ( col_counter[6] ) + ( GND ) + ( A1L131 );
A1L119 = CARRY(A1L119_adder_eqn);


--A1L86 is Add2~5
A1L86_adder_eqn = ( row_counter[7] ) + ( GND ) + ( A1L91 );
A1L86 = SUM(A1L86_adder_eqn);

--A1L87 is Add2~6
A1L87_adder_eqn = ( row_counter[7] ) + ( GND ) + ( A1L91 );
A1L87 = CARRY(A1L87_adder_eqn);


--A1L90 is Add2~9
A1L90_adder_eqn = ( row_counter[6] ) + ( GND ) + ( A1L95 );
A1L90 = SUM(A1L90_adder_eqn);

--A1L91 is Add2~10
A1L91_adder_eqn = ( row_counter[6] ) + ( GND ) + ( A1L95 );
A1L91 = CARRY(A1L91_adder_eqn);


--A1L122 is Add3~9
A1L122_adder_eqn = ( col_counter[9] ) + ( GND ) + ( A1L127 );
A1L122 = SUM(A1L122_adder_eqn);


--A1L126 is Add3~13
A1L126_adder_eqn = ( col_counter[8] ) + ( GND ) + ( A1L115 );
A1L126 = SUM(A1L126_adder_eqn);

--A1L127 is Add3~14
A1L127_adder_eqn = ( col_counter[8] ) + ( GND ) + ( A1L115 );
A1L127 = CARRY(A1L127_adder_eqn);


--Hcount[8] is Hcount[8]
--register power-up is low

Hcount[8] = DFFEAS(A1L2, A1L372Q,  ,  ,  ,  ,  , A1L315,  );


--Hcount[9] is Hcount[9]
--register power-up is low

Hcount[9] = DFFEAS(A1L6, A1L372Q,  ,  ,  ,  ,  , A1L315,  );


--Hcount[0] is Hcount[0]
--register power-up is low

Hcount[0] = DFFEAS(A1L10, A1L372Q,  ,  ,  ,  ,  , A1L315,  );


--Hcount[1] is Hcount[1]
--register power-up is low

Hcount[1] = DFFEAS(A1L14, A1L372Q,  ,  ,  ,  ,  , A1L315,  );


--Hcount[2] is Hcount[2]
--register power-up is low

Hcount[2] = DFFEAS(A1L18, A1L372Q,  ,  ,  ,  ,  , A1L315,  );


--Hcount[3] is Hcount[3]
--register power-up is low

Hcount[3] = DFFEAS(A1L22, A1L372Q,  ,  ,  ,  ,  , A1L315,  );


--Hcount[6] is Hcount[6]
--register power-up is low

Hcount[6] = DFFEAS(A1L26, A1L372Q,  ,  ,  ,  ,  , A1L315,  );


--Hcount[7] is Hcount[7]
--register power-up is low

Hcount[7] = DFFEAS(A1L30, A1L372Q,  ,  ,  ,  ,  , A1L315,  );


--Hcount[4] is Hcount[4]
--register power-up is low

Hcount[4] = DFFEAS(A1L34, A1L372Q,  ,  ,  ,  ,  , A1L315,  );


--Hcount[5] is Hcount[5]
--register power-up is low

Hcount[5] = DFFEAS(A1L38, A1L372Q,  ,  ,  ,  ,  , A1L315,  );


--Vcount[0] is Vcount[0]
--register power-up is low

Vcount[0] = DFFEAS(A1L42, !A1L367Q,  ,  ,  ,  ,  , A1L321,  );


--Vcount[5] is Vcount[5]
--register power-up is low

Vcount[5] = DFFEAS(A1L46, !A1L367Q,  ,  ,  ,  ,  , A1L321,  );


--Vcount[9] is Vcount[9]
--register power-up is low

Vcount[9] = DFFEAS(A1L50, !A1L367Q,  ,  ,  ,  ,  , A1L321,  );


--Vcount[3] is Vcount[3]
--register power-up is low

Vcount[3] = DFFEAS(A1L54, !A1L367Q,  ,  ,  ,  ,  , A1L321,  );


--Vcount[4] is Vcount[4]
--register power-up is low

Vcount[4] = DFFEAS(A1L58, !A1L367Q,  ,  ,  ,  ,  , A1L321,  );


--Vcount[6] is Vcount[6]
--register power-up is low

Vcount[6] = DFFEAS(A1L62, !A1L367Q,  ,  ,  ,  ,  , A1L321,  );


--Vcount[7] is Vcount[7]
--register power-up is low

Vcount[7] = DFFEAS(A1L66, !A1L367Q,  ,  ,  ,  ,  , A1L321,  );


--Vcount[8] is Vcount[8]
--register power-up is low

Vcount[8] = DFFEAS(A1L70, !A1L367Q,  ,  ,  ,  ,  , A1L321,  );


--Vcount[1] is Vcount[1]
--register power-up is low

Vcount[1] = DFFEAS(A1L74, !A1L367Q,  ,  ,  ,  ,  , A1L321,  );


--Vcount[2] is Vcount[2]
--register power-up is low

Vcount[2] = DFFEAS(A1L78, !A1L367Q,  ,  ,  ,  ,  , A1L321,  );


--A1L130 is Add3~17
A1L130_adder_eqn = ( col_counter[5] ) + ( GND ) + ( A1L135 );
A1L130 = SUM(A1L130_adder_eqn);

--A1L131 is Add3~18
A1L131_adder_eqn = ( col_counter[5] ) + ( GND ) + ( A1L135 );
A1L131 = CARRY(A1L131_adder_eqn);


--A1L94 is Add2~13
A1L94_adder_eqn = ( row_counter[5] ) + ( GND ) + ( A1L99 );
A1L94 = SUM(A1L94_adder_eqn);

--A1L95 is Add2~14
A1L95_adder_eqn = ( row_counter[5] ) + ( GND ) + ( A1L99 );
A1L95 = CARRY(A1L95_adder_eqn);


--A1L134 is Add3~21
A1L134_adder_eqn = ( col_counter[4] ) + ( GND ) + ( A1L139 );
A1L134 = SUM(A1L134_adder_eqn);

--A1L135 is Add3~22
A1L135_adder_eqn = ( col_counter[4] ) + ( GND ) + ( A1L139 );
A1L135 = CARRY(A1L135_adder_eqn);


--A1L98 is Add2~17
A1L98_adder_eqn = ( row_counter[4] ) + ( GND ) + ( A1L103 );
A1L98 = SUM(A1L98_adder_eqn);

--A1L99 is Add2~18
A1L99_adder_eqn = ( row_counter[4] ) + ( GND ) + ( A1L103 );
A1L99 = CARRY(A1L99_adder_eqn);


--A1L138 is Add3~25
A1L138_adder_eqn = ( col_counter[3] ) + ( GND ) + ( A1L143 );
A1L138 = SUM(A1L138_adder_eqn);

--A1L139 is Add3~26
A1L139_adder_eqn = ( col_counter[3] ) + ( GND ) + ( A1L143 );
A1L139 = CARRY(A1L139_adder_eqn);


--A1L102 is Add2~21
A1L102_adder_eqn = ( row_counter[3] ) + ( GND ) + ( A1L107 );
A1L102 = SUM(A1L102_adder_eqn);

--A1L103 is Add2~22
A1L103_adder_eqn = ( row_counter[3] ) + ( GND ) + ( A1L107 );
A1L103 = CARRY(A1L103_adder_eqn);


--A1L142 is Add3~29
A1L142_adder_eqn = ( col_counter[2] ) + ( GND ) + ( A1L147 );
A1L142 = SUM(A1L142_adder_eqn);

--A1L143 is Add3~30
A1L143_adder_eqn = ( col_counter[2] ) + ( GND ) + ( A1L147 );
A1L143 = CARRY(A1L143_adder_eqn);


--A1L106 is Add2~25
A1L106_adder_eqn = ( row_counter[2] ) + ( GND ) + ( A1L111 );
A1L106 = SUM(A1L106_adder_eqn);

--A1L107 is Add2~26
A1L107_adder_eqn = ( row_counter[2] ) + ( GND ) + ( A1L111 );
A1L107 = CARRY(A1L107_adder_eqn);


--A1L146 is Add3~33
A1L146_adder_eqn = ( col_counter[0] ) + ( col_counter[1] ) + ( !VCC );
A1L146 = SUM(A1L146_adder_eqn);

--A1L147 is Add3~34
A1L147_adder_eqn = ( col_counter[0] ) + ( col_counter[1] ) + ( !VCC );
A1L147 = CARRY(A1L147_adder_eqn);


--A1L110 is Add2~29
A1L110_adder_eqn = ( row_counter[0] ) + ( row_counter[1] ) + ( !VCC );
A1L110 = SUM(A1L110_adder_eqn);

--A1L111 is Add2~30
A1L111_adder_eqn = ( row_counter[0] ) + ( row_counter[1] ) + ( !VCC );
A1L111 = CARRY(A1L111_adder_eqn);


--pixel_clk is pixel_clk
pixel_clk = OUTPUT(A1L372Q);


--Hsync is Hsync
Hsync = OUTPUT(A1L367Q);


--Vsync is Vsync
Vsync = OUTPUT(A1L429Q);


--R[0] is R[0]
R[0] = OUTPUT(A1L413);


--R[1] is R[1]
R[1] = OUTPUT(A1L413);


--R[2] is R[2]
R[2] = OUTPUT(A1L413);


--R[3] is R[3]
R[3] = OUTPUT(A1L413);


--G[0] is G[0]
G[0] = OUTPUT(A1L351);


--G[1] is G[1]
G[1] = OUTPUT(A1L351);


--G[2] is G[2]
G[2] = OUTPUT(A1L351);


--G[3] is G[3]
G[3] = OUTPUT(A1L351);


--B[0] is B[0]
B[0] = OUTPUT(A1L430);


--B[1] is B[1]
B[1] = OUTPUT(A1L430);


--B[2] is B[2]
B[2] = OUTPUT(A1L430);


--B[3] is B[3]
B[3] = OUTPUT(A1L430);


--nblanck is nblanck
nblanck = OUTPUT(A1L431);


--nsync is nsync
nsync = OUTPUT(A1L430);


--A1L372Q is pixel_clk~reg0
--register power-up is low

A1L372Q = DFFEAS(A1L371, clk,  ,  ,  ,  ,  ,  ,  );


--A1L367Q is Hsync~reg0
--register power-up is low

A1L367Q = DFFEAS(A1L366, A1L372Q,  ,  ,  ,  ,  ,  ,  );


--A1L429Q is Vsync~reg0
--register power-up is low

A1L429Q = DFFEAS(A1L428, !A1L367Q,  ,  ,  ,  ,  ,  ,  );


--row_counter[8] is row_counter[8]
--register power-up is low

row_counter[8] = DFFEAS(A1L82, A1L367Q, A1L429Q,  , Vactive,  ,  ,  ,  );


--display_buffer[0][0][0] is display_buffer[0][0][0]
display_buffer[0][0][0] = INPUT();


--display_buffer[0][2][0] is display_buffer[0][2][0]
display_buffer[0][2][0] = INPUT();


--display_buffer[0][1][0] is display_buffer[0][1][0]
display_buffer[0][1][0] = INPUT();


--display_buffer[0][3][0] is display_buffer[0][3][0]
display_buffer[0][3][0] = INPUT();


--col_counter[7] is col_counter[7]
--register power-up is low

col_counter[7] = DFFEAS(A1L114, A1L372Q, A1L367Q,  , Hactive,  ,  ,  ,  );


--col_counter[6] is col_counter[6]
--register power-up is low

col_counter[6] = DFFEAS(A1L118, A1L372Q, A1L367Q,  , Hactive,  ,  ,  ,  );


--A1L389 is R~0
A1L389 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[0][3][0] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[0][1][0] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[0][2][0] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[0][0][0] ) ) );


--display_buffer[2][0][0] is display_buffer[2][0][0]
display_buffer[2][0][0] = INPUT();


--display_buffer[2][2][0] is display_buffer[2][2][0]
display_buffer[2][2][0] = INPUT();


--display_buffer[2][1][0] is display_buffer[2][1][0]
display_buffer[2][1][0] = INPUT();


--display_buffer[2][3][0] is display_buffer[2][3][0]
display_buffer[2][3][0] = INPUT();


--A1L390 is R~1
A1L390 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[2][3][0] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[2][1][0] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[2][2][0] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[2][0][0] ) ) );


--display_buffer[1][0][0] is display_buffer[1][0][0]
display_buffer[1][0][0] = INPUT();


--display_buffer[1][2][0] is display_buffer[1][2][0]
display_buffer[1][2][0] = INPUT();


--display_buffer[1][1][0] is display_buffer[1][1][0]
display_buffer[1][1][0] = INPUT();


--display_buffer[1][3][0] is display_buffer[1][3][0]
display_buffer[1][3][0] = INPUT();


--A1L391 is R~2
A1L391 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[1][3][0] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[1][1][0] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[1][2][0] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[1][0][0] ) ) );


--display_buffer[3][0][0] is display_buffer[3][0][0]
display_buffer[3][0][0] = INPUT();


--display_buffer[3][2][0] is display_buffer[3][2][0]
display_buffer[3][2][0] = INPUT();


--display_buffer[3][1][0] is display_buffer[3][1][0]
display_buffer[3][1][0] = INPUT();


--display_buffer[3][3][0] is display_buffer[3][3][0]
display_buffer[3][3][0] = INPUT();


--A1L392 is R~3
A1L392 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[3][3][0] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[3][1][0] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[3][2][0] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[3][0][0] ) ) );


--row_counter[7] is row_counter[7]
--register power-up is low

row_counter[7] = DFFEAS(A1L86, A1L367Q, A1L429Q,  , Vactive,  ,  ,  ,  );


--row_counter[6] is row_counter[6]
--register power-up is low

row_counter[6] = DFFEAS(A1L90, A1L367Q, A1L429Q,  , Vactive,  ,  ,  ,  );


--A1L393 is R~4
A1L393 = ( row_counter[7] & ( row_counter[6] & ( A1L392 ) ) ) # ( !row_counter[7] & ( row_counter[6] & ( A1L391 ) ) ) # ( row_counter[7] & ( !row_counter[6] & ( A1L390 ) ) ) # ( !row_counter[7] & ( !row_counter[6] & ( A1L389 ) ) );


--display_buffer[0][8][0] is display_buffer[0][8][0]
display_buffer[0][8][0] = INPUT();


--display_buffer[2][8][0] is display_buffer[2][8][0]
display_buffer[2][8][0] = INPUT();


--display_buffer[1][8][0] is display_buffer[1][8][0]
display_buffer[1][8][0] = INPUT();


--display_buffer[3][8][0] is display_buffer[3][8][0]
display_buffer[3][8][0] = INPUT();


--A1L394 is R~5
A1L394 = ( row_counter[7] & ( row_counter[6] & ( display_buffer[3][8][0] ) ) ) # ( !row_counter[7] & ( row_counter[6] & ( display_buffer[1][8][0] ) ) ) # ( row_counter[7] & ( !row_counter[6] & ( display_buffer[2][8][0] ) ) ) # ( !row_counter[7] & ( !row_counter[6] & ( display_buffer[0][8][0] ) ) );


--display_buffer[0][4][0] is display_buffer[0][4][0]
display_buffer[0][4][0] = INPUT();


--display_buffer[0][6][0] is display_buffer[0][6][0]
display_buffer[0][6][0] = INPUT();


--display_buffer[0][5][0] is display_buffer[0][5][0]
display_buffer[0][5][0] = INPUT();


--display_buffer[0][7][0] is display_buffer[0][7][0]
display_buffer[0][7][0] = INPUT();


--A1L395 is R~6
A1L395 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[0][7][0] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[0][5][0] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[0][6][0] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[0][4][0] ) ) );


--display_buffer[2][4][0] is display_buffer[2][4][0]
display_buffer[2][4][0] = INPUT();


--display_buffer[2][6][0] is display_buffer[2][6][0]
display_buffer[2][6][0] = INPUT();


--display_buffer[2][5][0] is display_buffer[2][5][0]
display_buffer[2][5][0] = INPUT();


--display_buffer[2][7][0] is display_buffer[2][7][0]
display_buffer[2][7][0] = INPUT();


--A1L396 is R~7
A1L396 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[2][7][0] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[2][5][0] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[2][6][0] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[2][4][0] ) ) );


--display_buffer[1][4][0] is display_buffer[1][4][0]
display_buffer[1][4][0] = INPUT();


--display_buffer[1][6][0] is display_buffer[1][6][0]
display_buffer[1][6][0] = INPUT();


--display_buffer[1][5][0] is display_buffer[1][5][0]
display_buffer[1][5][0] = INPUT();


--display_buffer[1][7][0] is display_buffer[1][7][0]
display_buffer[1][7][0] = INPUT();


--A1L397 is R~8
A1L397 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[1][7][0] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[1][5][0] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[1][6][0] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[1][4][0] ) ) );


--display_buffer[3][4][0] is display_buffer[3][4][0]
display_buffer[3][4][0] = INPUT();


--display_buffer[3][6][0] is display_buffer[3][6][0]
display_buffer[3][6][0] = INPUT();


--display_buffer[3][5][0] is display_buffer[3][5][0]
display_buffer[3][5][0] = INPUT();


--display_buffer[3][7][0] is display_buffer[3][7][0]
display_buffer[3][7][0] = INPUT();


--A1L398 is R~9
A1L398 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[3][7][0] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[3][5][0] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[3][6][0] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[3][4][0] ) ) );


--A1L399 is R~10
A1L399 = ( row_counter[7] & ( row_counter[6] & ( A1L398 ) ) ) # ( !row_counter[7] & ( row_counter[6] & ( A1L397 ) ) ) # ( row_counter[7] & ( !row_counter[6] & ( A1L396 ) ) ) # ( !row_counter[7] & ( !row_counter[6] & ( A1L395 ) ) );


--display_buffer[0][9][0] is display_buffer[0][9][0]
display_buffer[0][9][0] = INPUT();


--display_buffer[2][9][0] is display_buffer[2][9][0]
display_buffer[2][9][0] = INPUT();


--display_buffer[1][9][0] is display_buffer[1][9][0]
display_buffer[1][9][0] = INPUT();


--display_buffer[3][9][0] is display_buffer[3][9][0]
display_buffer[3][9][0] = INPUT();


--A1L400 is R~11
A1L400 = ( row_counter[7] & ( row_counter[6] & ( display_buffer[3][9][0] ) ) ) # ( !row_counter[7] & ( row_counter[6] & ( display_buffer[1][9][0] ) ) ) # ( row_counter[7] & ( !row_counter[6] & ( display_buffer[2][9][0] ) ) ) # ( !row_counter[7] & ( !row_counter[6] & ( display_buffer[0][9][0] ) ) );


--col_counter[9] is col_counter[9]
--register power-up is low

col_counter[9] = DFFEAS(A1L122, A1L372Q, A1L367Q,  , Hactive,  ,  ,  ,  );


--col_counter[8] is col_counter[8]
--register power-up is low

col_counter[8] = DFFEAS(A1L126, A1L372Q, A1L367Q,  , Hactive,  ,  ,  ,  );


--A1L401 is R~12
A1L401 = (!col_counter[9] & ((col_counter[8]))) # (col_counter[9] & (col_counter[6]));


--A1L402 is R~13
A1L402 = ( col_counter[9] & ( A1L401 & ( A1L400 ) ) ) # ( !col_counter[9] & ( A1L401 & ( A1L399 ) ) ) # ( col_counter[9] & ( !A1L401 & ( A1L394 ) ) ) # ( !col_counter[9] & ( !A1L401 & ( A1L393 ) ) );


--display_buffer[6][0][0] is display_buffer[6][0][0]
display_buffer[6][0][0] = INPUT();


--display_buffer[6][2][0] is display_buffer[6][2][0]
display_buffer[6][2][0] = INPUT();


--display_buffer[6][1][0] is display_buffer[6][1][0]
display_buffer[6][1][0] = INPUT();


--display_buffer[6][3][0] is display_buffer[6][3][0]
display_buffer[6][3][0] = INPUT();


--A1L403 is R~14
A1L403 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[6][3][0] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[6][1][0] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[6][2][0] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[6][0][0] ) ) );


--display_buffer[6][4][0] is display_buffer[6][4][0]
display_buffer[6][4][0] = INPUT();


--display_buffer[6][6][0] is display_buffer[6][6][0]
display_buffer[6][6][0] = INPUT();


--display_buffer[6][5][0] is display_buffer[6][5][0]
display_buffer[6][5][0] = INPUT();


--display_buffer[6][7][0] is display_buffer[6][7][0]
display_buffer[6][7][0] = INPUT();


--A1L404 is R~15
A1L404 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[6][7][0] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[6][5][0] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[6][6][0] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[6][4][0] ) ) );


--display_buffer[6][8][0] is display_buffer[6][8][0]
display_buffer[6][8][0] = INPUT();


--display_buffer[6][9][0] is display_buffer[6][9][0]
display_buffer[6][9][0] = INPUT();


--A1L405 is R~16
A1L405 = ( A1L401 & ( col_counter[9] & ( display_buffer[6][9][0] ) ) ) # ( !A1L401 & ( col_counter[9] & ( display_buffer[6][8][0] ) ) ) # ( A1L401 & ( !col_counter[9] & ( A1L404 ) ) ) # ( !A1L401 & ( !col_counter[9] & ( A1L403 ) ) );


--display_buffer[4][0][0] is display_buffer[4][0][0]
display_buffer[4][0][0] = INPUT();


--display_buffer[4][2][0] is display_buffer[4][2][0]
display_buffer[4][2][0] = INPUT();


--display_buffer[4][1][0] is display_buffer[4][1][0]
display_buffer[4][1][0] = INPUT();


--display_buffer[4][3][0] is display_buffer[4][3][0]
display_buffer[4][3][0] = INPUT();


--A1L406 is R~17
A1L406 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[4][3][0] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[4][1][0] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[4][2][0] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[4][0][0] ) ) );


--display_buffer[4][4][0] is display_buffer[4][4][0]
display_buffer[4][4][0] = INPUT();


--display_buffer[4][6][0] is display_buffer[4][6][0]
display_buffer[4][6][0] = INPUT();


--display_buffer[4][5][0] is display_buffer[4][5][0]
display_buffer[4][5][0] = INPUT();


--display_buffer[4][7][0] is display_buffer[4][7][0]
display_buffer[4][7][0] = INPUT();


--A1L407 is R~18
A1L407 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[4][7][0] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[4][5][0] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[4][6][0] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[4][4][0] ) ) );


--display_buffer[4][8][0] is display_buffer[4][8][0]
display_buffer[4][8][0] = INPUT();


--display_buffer[4][9][0] is display_buffer[4][9][0]
display_buffer[4][9][0] = INPUT();


--A1L408 is R~19
A1L408 = ( A1L401 & ( col_counter[9] & ( display_buffer[4][9][0] ) ) ) # ( !A1L401 & ( col_counter[9] & ( display_buffer[4][8][0] ) ) ) # ( A1L401 & ( !col_counter[9] & ( A1L407 ) ) ) # ( !A1L401 & ( !col_counter[9] & ( A1L406 ) ) );


--display_buffer[5][0][0] is display_buffer[5][0][0]
display_buffer[5][0][0] = INPUT();


--display_buffer[5][2][0] is display_buffer[5][2][0]
display_buffer[5][2][0] = INPUT();


--display_buffer[5][1][0] is display_buffer[5][1][0]
display_buffer[5][1][0] = INPUT();


--display_buffer[5][3][0] is display_buffer[5][3][0]
display_buffer[5][3][0] = INPUT();


--A1L409 is R~20
A1L409 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[5][3][0] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[5][1][0] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[5][2][0] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[5][0][0] ) ) );


--display_buffer[5][4][0] is display_buffer[5][4][0]
display_buffer[5][4][0] = INPUT();


--display_buffer[5][6][0] is display_buffer[5][6][0]
display_buffer[5][6][0] = INPUT();


--display_buffer[5][5][0] is display_buffer[5][5][0]
display_buffer[5][5][0] = INPUT();


--display_buffer[5][7][0] is display_buffer[5][7][0]
display_buffer[5][7][0] = INPUT();


--A1L410 is R~21
A1L410 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[5][7][0] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[5][5][0] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[5][6][0] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[5][4][0] ) ) );


--display_buffer[5][8][0] is display_buffer[5][8][0]
display_buffer[5][8][0] = INPUT();


--display_buffer[5][9][0] is display_buffer[5][9][0]
display_buffer[5][9][0] = INPUT();


--A1L411 is R~22
A1L411 = ( A1L401 & ( col_counter[9] & ( display_buffer[5][9][0] ) ) ) # ( !A1L401 & ( col_counter[9] & ( display_buffer[5][8][0] ) ) ) # ( A1L401 & ( !col_counter[9] & ( A1L410 ) ) ) # ( !A1L401 & ( !col_counter[9] & ( A1L409 ) ) );


--A1L412 is R~23
A1L412 = ( A1L411 & ( (!row_counter[7] & (((A1L408)) # (row_counter[6]))) # (row_counter[7] & (((A1L405)))) ) ) # ( !A1L411 & ( (!row_counter[7] & (!row_counter[6] & ((A1L408)))) # (row_counter[7] & (((A1L405)))) ) );


--Hactive is Hactive
--register power-up is low

Hactive = DFFEAS(A1L353, A1L372Q,  ,  ,  ,  ,  ,  ,  );


--Vactive is Vactive
--register power-up is low

Vactive = DFFEAS(A1L415, !A1L367Q,  ,  ,  ,  ,  ,  ,  );


--A1L413 is R~24
A1L413 = ( Vactive & ( (Hactive & ((!row_counter[8] & (A1L402)) # (row_counter[8] & ((A1L412))))) ) );


--display_buffer[0][0][1] is display_buffer[0][0][1]
display_buffer[0][0][1] = INPUT();


--display_buffer[0][2][1] is display_buffer[0][2][1]
display_buffer[0][2][1] = INPUT();


--display_buffer[0][1][1] is display_buffer[0][1][1]
display_buffer[0][1][1] = INPUT();


--display_buffer[0][3][1] is display_buffer[0][3][1]
display_buffer[0][3][1] = INPUT();


--A1L328 is G~0
A1L328 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[0][3][1] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[0][1][1] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[0][2][1] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[0][0][1] ) ) );


--display_buffer[1][0][1] is display_buffer[1][0][1]
display_buffer[1][0][1] = INPUT();


--display_buffer[1][2][1] is display_buffer[1][2][1]
display_buffer[1][2][1] = INPUT();


--display_buffer[1][1][1] is display_buffer[1][1][1]
display_buffer[1][1][1] = INPUT();


--display_buffer[1][3][1] is display_buffer[1][3][1]
display_buffer[1][3][1] = INPUT();


--A1L329 is G~1
A1L329 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[1][3][1] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[1][1][1] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[1][2][1] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[1][0][1] ) ) );


--display_buffer[0][4][1] is display_buffer[0][4][1]
display_buffer[0][4][1] = INPUT();


--display_buffer[0][6][1] is display_buffer[0][6][1]
display_buffer[0][6][1] = INPUT();


--display_buffer[0][5][1] is display_buffer[0][5][1]
display_buffer[0][5][1] = INPUT();


--display_buffer[0][7][1] is display_buffer[0][7][1]
display_buffer[0][7][1] = INPUT();


--A1L330 is G~2
A1L330 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[0][7][1] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[0][5][1] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[0][6][1] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[0][4][1] ) ) );


--display_buffer[1][4][1] is display_buffer[1][4][1]
display_buffer[1][4][1] = INPUT();


--display_buffer[1][6][1] is display_buffer[1][6][1]
display_buffer[1][6][1] = INPUT();


--display_buffer[1][5][1] is display_buffer[1][5][1]
display_buffer[1][5][1] = INPUT();


--display_buffer[1][7][1] is display_buffer[1][7][1]
display_buffer[1][7][1] = INPUT();


--A1L331 is G~3
A1L331 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[1][7][1] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[1][5][1] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[1][6][1] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[1][4][1] ) ) );


--A1L332 is G~4
A1L332 = ( row_counter[6] & ( A1L401 & ( A1L331 ) ) ) # ( !row_counter[6] & ( A1L401 & ( A1L330 ) ) ) # ( row_counter[6] & ( !A1L401 & ( A1L329 ) ) ) # ( !row_counter[6] & ( !A1L401 & ( A1L328 ) ) );


--display_buffer[2][0][1] is display_buffer[2][0][1]
display_buffer[2][0][1] = INPUT();


--display_buffer[2][2][1] is display_buffer[2][2][1]
display_buffer[2][2][1] = INPUT();


--display_buffer[2][1][1] is display_buffer[2][1][1]
display_buffer[2][1][1] = INPUT();


--display_buffer[2][3][1] is display_buffer[2][3][1]
display_buffer[2][3][1] = INPUT();


--A1L333 is G~5
A1L333 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[2][3][1] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[2][1][1] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[2][2][1] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[2][0][1] ) ) );


--display_buffer[3][0][1] is display_buffer[3][0][1]
display_buffer[3][0][1] = INPUT();


--display_buffer[3][2][1] is display_buffer[3][2][1]
display_buffer[3][2][1] = INPUT();


--display_buffer[3][1][1] is display_buffer[3][1][1]
display_buffer[3][1][1] = INPUT();


--display_buffer[3][3][1] is display_buffer[3][3][1]
display_buffer[3][3][1] = INPUT();


--A1L334 is G~6
A1L334 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[3][3][1] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[3][1][1] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[3][2][1] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[3][0][1] ) ) );


--display_buffer[2][4][1] is display_buffer[2][4][1]
display_buffer[2][4][1] = INPUT();


--display_buffer[2][6][1] is display_buffer[2][6][1]
display_buffer[2][6][1] = INPUT();


--display_buffer[2][5][1] is display_buffer[2][5][1]
display_buffer[2][5][1] = INPUT();


--display_buffer[2][7][1] is display_buffer[2][7][1]
display_buffer[2][7][1] = INPUT();


--A1L335 is G~7
A1L335 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[2][7][1] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[2][5][1] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[2][6][1] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[2][4][1] ) ) );


--display_buffer[3][4][1] is display_buffer[3][4][1]
display_buffer[3][4][1] = INPUT();


--display_buffer[3][6][1] is display_buffer[3][6][1]
display_buffer[3][6][1] = INPUT();


--display_buffer[3][5][1] is display_buffer[3][5][1]
display_buffer[3][5][1] = INPUT();


--display_buffer[3][7][1] is display_buffer[3][7][1]
display_buffer[3][7][1] = INPUT();


--A1L336 is G~8
A1L336 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[3][7][1] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[3][5][1] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[3][6][1] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[3][4][1] ) ) );


--A1L337 is G~9
A1L337 = ( row_counter[6] & ( A1L401 & ( A1L336 ) ) ) # ( !row_counter[6] & ( A1L401 & ( A1L335 ) ) ) # ( row_counter[6] & ( !A1L401 & ( A1L334 ) ) ) # ( !row_counter[6] & ( !A1L401 & ( A1L333 ) ) );


--display_buffer[0][8][1] is display_buffer[0][8][1]
display_buffer[0][8][1] = INPUT();


--display_buffer[1][8][1] is display_buffer[1][8][1]
display_buffer[1][8][1] = INPUT();


--display_buffer[0][9][1] is display_buffer[0][9][1]
display_buffer[0][9][1] = INPUT();


--display_buffer[1][9][1] is display_buffer[1][9][1]
display_buffer[1][9][1] = INPUT();


--A1L338 is G~10
A1L338 = ( row_counter[6] & ( A1L401 & ( display_buffer[1][9][1] ) ) ) # ( !row_counter[6] & ( A1L401 & ( display_buffer[0][9][1] ) ) ) # ( row_counter[6] & ( !A1L401 & ( display_buffer[1][8][1] ) ) ) # ( !row_counter[6] & ( !A1L401 & ( display_buffer[0][8][1] ) ) );


--display_buffer[2][8][1] is display_buffer[2][8][1]
display_buffer[2][8][1] = INPUT();


--display_buffer[3][8][1] is display_buffer[3][8][1]
display_buffer[3][8][1] = INPUT();


--display_buffer[2][9][1] is display_buffer[2][9][1]
display_buffer[2][9][1] = INPUT();


--display_buffer[3][9][1] is display_buffer[3][9][1]
display_buffer[3][9][1] = INPUT();


--A1L339 is G~11
A1L339 = ( row_counter[6] & ( A1L401 & ( display_buffer[3][9][1] ) ) ) # ( !row_counter[6] & ( A1L401 & ( display_buffer[2][9][1] ) ) ) # ( row_counter[6] & ( !A1L401 & ( display_buffer[3][8][1] ) ) ) # ( !row_counter[6] & ( !A1L401 & ( display_buffer[2][8][1] ) ) );


--A1L340 is G~12
A1L340 = ( row_counter[7] & ( col_counter[9] & ( A1L339 ) ) ) # ( !row_counter[7] & ( col_counter[9] & ( A1L338 ) ) ) # ( row_counter[7] & ( !col_counter[9] & ( A1L337 ) ) ) # ( !row_counter[7] & ( !col_counter[9] & ( A1L332 ) ) );


--display_buffer[6][0][1] is display_buffer[6][0][1]
display_buffer[6][0][1] = INPUT();


--display_buffer[6][2][1] is display_buffer[6][2][1]
display_buffer[6][2][1] = INPUT();


--display_buffer[6][1][1] is display_buffer[6][1][1]
display_buffer[6][1][1] = INPUT();


--display_buffer[6][3][1] is display_buffer[6][3][1]
display_buffer[6][3][1] = INPUT();


--A1L341 is G~13
A1L341 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[6][3][1] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[6][1][1] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[6][2][1] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[6][0][1] ) ) );


--display_buffer[6][4][1] is display_buffer[6][4][1]
display_buffer[6][4][1] = INPUT();


--display_buffer[6][6][1] is display_buffer[6][6][1]
display_buffer[6][6][1] = INPUT();


--display_buffer[6][5][1] is display_buffer[6][5][1]
display_buffer[6][5][1] = INPUT();


--display_buffer[6][7][1] is display_buffer[6][7][1]
display_buffer[6][7][1] = INPUT();


--A1L342 is G~14
A1L342 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[6][7][1] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[6][5][1] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[6][6][1] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[6][4][1] ) ) );


--display_buffer[6][8][1] is display_buffer[6][8][1]
display_buffer[6][8][1] = INPUT();


--display_buffer[6][9][1] is display_buffer[6][9][1]
display_buffer[6][9][1] = INPUT();


--A1L343 is G~15
A1L343 = ( A1L401 & ( col_counter[9] & ( display_buffer[6][9][1] ) ) ) # ( !A1L401 & ( col_counter[9] & ( display_buffer[6][8][1] ) ) ) # ( A1L401 & ( !col_counter[9] & ( A1L342 ) ) ) # ( !A1L401 & ( !col_counter[9] & ( A1L341 ) ) );


--display_buffer[4][0][1] is display_buffer[4][0][1]
display_buffer[4][0][1] = INPUT();


--display_buffer[4][2][1] is display_buffer[4][2][1]
display_buffer[4][2][1] = INPUT();


--display_buffer[4][1][1] is display_buffer[4][1][1]
display_buffer[4][1][1] = INPUT();


--display_buffer[4][3][1] is display_buffer[4][3][1]
display_buffer[4][3][1] = INPUT();


--A1L344 is G~16
A1L344 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[4][3][1] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[4][1][1] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[4][2][1] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[4][0][1] ) ) );


--display_buffer[4][4][1] is display_buffer[4][4][1]
display_buffer[4][4][1] = INPUT();


--display_buffer[4][6][1] is display_buffer[4][6][1]
display_buffer[4][6][1] = INPUT();


--display_buffer[4][5][1] is display_buffer[4][5][1]
display_buffer[4][5][1] = INPUT();


--display_buffer[4][7][1] is display_buffer[4][7][1]
display_buffer[4][7][1] = INPUT();


--A1L345 is G~17
A1L345 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[4][7][1] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[4][5][1] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[4][6][1] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[4][4][1] ) ) );


--display_buffer[4][8][1] is display_buffer[4][8][1]
display_buffer[4][8][1] = INPUT();


--display_buffer[4][9][1] is display_buffer[4][9][1]
display_buffer[4][9][1] = INPUT();


--A1L346 is G~18
A1L346 = ( A1L401 & ( col_counter[9] & ( display_buffer[4][9][1] ) ) ) # ( !A1L401 & ( col_counter[9] & ( display_buffer[4][8][1] ) ) ) # ( A1L401 & ( !col_counter[9] & ( A1L345 ) ) ) # ( !A1L401 & ( !col_counter[9] & ( A1L344 ) ) );


--display_buffer[5][0][1] is display_buffer[5][0][1]
display_buffer[5][0][1] = INPUT();


--display_buffer[5][2][1] is display_buffer[5][2][1]
display_buffer[5][2][1] = INPUT();


--display_buffer[5][1][1] is display_buffer[5][1][1]
display_buffer[5][1][1] = INPUT();


--display_buffer[5][3][1] is display_buffer[5][3][1]
display_buffer[5][3][1] = INPUT();


--A1L347 is G~19
A1L347 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[5][3][1] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[5][1][1] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[5][2][1] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[5][0][1] ) ) );


--display_buffer[5][4][1] is display_buffer[5][4][1]
display_buffer[5][4][1] = INPUT();


--display_buffer[5][6][1] is display_buffer[5][6][1]
display_buffer[5][6][1] = INPUT();


--display_buffer[5][5][1] is display_buffer[5][5][1]
display_buffer[5][5][1] = INPUT();


--display_buffer[5][7][1] is display_buffer[5][7][1]
display_buffer[5][7][1] = INPUT();


--A1L348 is G~20
A1L348 = ( col_counter[7] & ( col_counter[6] & ( display_buffer[5][7][1] ) ) ) # ( !col_counter[7] & ( col_counter[6] & ( display_buffer[5][5][1] ) ) ) # ( col_counter[7] & ( !col_counter[6] & ( display_buffer[5][6][1] ) ) ) # ( !col_counter[7] & ( !col_counter[6] & ( display_buffer[5][4][1] ) ) );


--display_buffer[5][8][1] is display_buffer[5][8][1]
display_buffer[5][8][1] = INPUT();


--display_buffer[5][9][1] is display_buffer[5][9][1]
display_buffer[5][9][1] = INPUT();


--A1L349 is G~21
A1L349 = ( A1L401 & ( col_counter[9] & ( display_buffer[5][9][1] ) ) ) # ( !A1L401 & ( col_counter[9] & ( display_buffer[5][8][1] ) ) ) # ( A1L401 & ( !col_counter[9] & ( A1L348 ) ) ) # ( !A1L401 & ( !col_counter[9] & ( A1L347 ) ) );


--A1L350 is G~22
A1L350 = ( A1L349 & ( (!row_counter[7] & (((A1L346)) # (row_counter[6]))) # (row_counter[7] & (((A1L343)))) ) ) # ( !A1L349 & ( (!row_counter[7] & (!row_counter[6] & ((A1L346)))) # (row_counter[7] & (((A1L343)))) ) );


--A1L351 is G~23
A1L351 = ( A1L350 & ( (Hactive & (Vactive & ((A1L340) # (row_counter[8])))) ) ) # ( !A1L350 & ( (!row_counter[8] & (Hactive & (Vactive & A1L340))) ) );


--clk is clk
clk = INPUT();


--A1L307 is Equal0~0
A1L307 = ( !A1L18 & ( !A1L22 & ( (!A1L2 & (!A1L6 & (!A1L10 & !A1L14))) ) ) );


--A1L311 is Equal1~0
A1L311 = (!A1L26 & (A1L30 & (A1L34 & !A1L38)));


--A1L312 is Equal1~1
A1L312 = (A1L34 & !A1L38);


--A1L308 is Equal0~1
A1L308 = (!A1L10 & (!A1L14 & (!A1L18 & !A1L22)));


--A1L313 is Equal2~0
A1L313 = ( A1L312 & ( A1L308 & ( (!A1L26 & (!A1L30 & (A1L2 & A1L6))) ) ) );


--A1L315 is Equal3~0
A1L315 = ( A1L38 & ( A1L316 & ( (!A1L26 & (!A1L30 & (A1L2 & A1L6))) ) ) );


--A1L309 is Equal0~2
A1L309 = (A1L26 & (!A1L30 & (!A1L34 & A1L38)));


--A1L366 is Hsync~0
A1L366 = ( A1L315 & ( A1L309 & ( ((A1L367Q & A1L313)) # (A1L307) ) ) ) # ( !A1L315 & ( A1L309 & ( (A1L307) # (A1L367Q) ) ) ) # ( A1L315 & ( !A1L309 & ( (A1L367Q & (((A1L307 & A1L311)) # (A1L313))) ) ) ) # ( !A1L315 & ( !A1L309 & ( A1L367Q ) ) );


--A1L317 is Equal4~0
A1L317 = (A1L74 & !A1L78);


--A1L318 is Equal4~1
A1L318 = ( !A1L70 & ( A1L317 & ( (!A1L54 & (!A1L58 & (!A1L62 & !A1L66))) ) ) );


--A1L321 is Equal7~0
A1L321 = ( !A1L46 & ( A1L322 & ( (A1L50 & (!A1L66 & (!A1L70 & !A1L62))) ) ) );


--A1L428 is Vsync~0
A1L428 = ( A1L318 & ( A1L321 & ( (!A1L42 & (((!A1L46 & !A1L50)))) # (A1L42 & (A1L429Q & (!A1L46 $ (!A1L50)))) ) ) ) # ( A1L318 & ( !A1L321 & ( ((!A1L42 & (!A1L46 & !A1L50))) # (A1L429Q) ) ) ) # ( !A1L318 & ( !A1L321 & ( A1L429Q ) ) );


--A1L310 is Equal0~3
A1L310 = (!A1L10 & (!A1L14 & !A1L18));


--A1L314 is Equal2~1
A1L314 = ( !A1L22 & ( A1L310 & ( (!A1L26 & (!A1L30 & (A1L2 & A1L6))) ) ) );


--A1L353 is Hactive~0
A1L353 = ( A1L314 & ( A1L309 & ( (Hactive & ((!A1L312) # (A1L307))) ) ) ) # ( !A1L314 & ( A1L309 & ( Hactive ) ) ) # ( A1L314 & ( !A1L309 & ( (!Hactive & (((A1L307 & A1L311)))) # (Hactive & ((!A1L312) # ((A1L307 & A1L311)))) ) ) ) # ( !A1L314 & ( !A1L309 & ( ((A1L307 & A1L311)) # (Hactive) ) ) );


--A1L319 is Equal4~2
A1L319 = (!A1L58 & (!A1L62 & (!A1L66 & !A1L70)));


--A1L320 is Equal4~3
A1L320 = (A1L74 & (!A1L78 & !A1L54));


--A1L415 is Vactive~0
A1L415 = ( A1L319 & ( A1L320 & ( (!Vactive & (A1L42 & (A1L46 & !A1L50))) # (Vactive & ((!A1L42) # ((!A1L50) # (A1L46)))) ) ) ) # ( !A1L319 & ( A1L320 & ( Vactive ) ) ) # ( A1L319 & ( !A1L320 & ( Vactive ) ) ) # ( !A1L319 & ( !A1L320 & ( Vactive ) ) );


--col_counter[5] is col_counter[5]
--register power-up is low

col_counter[5] = DFFEAS(A1L130, A1L372Q, A1L367Q,  , Hactive,  ,  ,  ,  );


--row_counter[5] is row_counter[5]
--register power-up is low

row_counter[5] = DFFEAS(A1L94, A1L367Q, A1L429Q,  , Vactive,  ,  ,  ,  );


--col_counter[4] is col_counter[4]
--register power-up is low

col_counter[4] = DFFEAS(A1L134, A1L372Q, A1L367Q,  , Hactive,  ,  ,  ,  );


--row_counter[4] is row_counter[4]
--register power-up is low

row_counter[4] = DFFEAS(A1L98, A1L367Q, A1L429Q,  , Vactive,  ,  ,  ,  );


--col_counter[3] is col_counter[3]
--register power-up is low

col_counter[3] = DFFEAS(A1L138, A1L372Q, A1L367Q,  , Hactive,  ,  ,  ,  );


--row_counter[3] is row_counter[3]
--register power-up is low

row_counter[3] = DFFEAS(A1L102, A1L367Q, A1L429Q,  , Vactive,  ,  ,  ,  );


--col_counter[2] is col_counter[2]
--register power-up is low

col_counter[2] = DFFEAS(A1L142, A1L372Q, A1L367Q,  , Hactive,  ,  ,  ,  );


--row_counter[2] is row_counter[2]
--register power-up is low

row_counter[2] = DFFEAS(A1L106, A1L367Q, A1L429Q,  , Vactive,  ,  ,  ,  );


--col_counter[0] is col_counter[0]
--register power-up is low

col_counter[0] = DFFEAS(A1L157, A1L372Q, A1L367Q,  , Hactive,  ,  ,  ,  );


--col_counter[1] is col_counter[1]
--register power-up is low

col_counter[1] = DFFEAS(A1L146, A1L372Q, A1L367Q,  , Hactive,  ,  ,  ,  );


--row_counter[0] is row_counter[0]
--register power-up is low

row_counter[0] = DFFEAS(A1L380, A1L367Q, A1L429Q,  , Vactive,  ,  ,  ,  );


--row_counter[1] is row_counter[1]
--register power-up is low

row_counter[1] = DFFEAS(A1L110, A1L367Q, A1L429Q,  , Vactive,  ,  ,  ,  );


--A1L316 is Equal3~1
A1L316 = ( !A1L22 & ( (!A1L34 & (!A1L10 & (!A1L14 & !A1L18))) ) );


--A1L322 is Equal7~1
A1L322 = ( A1L54 & ( (!A1L58 & (A1L42 & (!A1L74 & A1L78))) ) );


--A1L371 is pixel_clk~0
A1L371 = !A1L372Q;


--A1L157 is col_counter[0]~0
A1L157 = !col_counter[0];


--A1L380 is row_counter[0]~0
A1L380 = !row_counter[0];


--A1L430 is ~GND
A1L430 = GND;


--A1L431 is ~VCC
A1L431 = VCC;


