-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--A1L2 is Add0~1 at LABCELL_X14_Y17_N54
A1L2_adder_eqn = ( Hcount[8] ) + ( GND ) + ( A1L31 );
A1L2 = SUM(A1L2_adder_eqn);

--A1L3 is Add0~2 at LABCELL_X14_Y17_N54
A1L3_adder_eqn = ( Hcount[8] ) + ( GND ) + ( A1L31 );
A1L3 = CARRY(A1L3_adder_eqn);


--A1L6 is Add0~5 at LABCELL_X14_Y17_N57
A1L6_adder_eqn = ( Hcount[9] ) + ( GND ) + ( A1L3 );
A1L6 = SUM(A1L6_adder_eqn);


--A1L10 is Add0~9 at LABCELL_X14_Y17_N30
A1L10_adder_eqn = ( Hcount[0] ) + ( VCC ) + ( !VCC );
A1L10 = SUM(A1L10_adder_eqn);

--A1L11 is Add0~10 at LABCELL_X14_Y17_N30
A1L11_adder_eqn = ( Hcount[0] ) + ( VCC ) + ( !VCC );
A1L11 = CARRY(A1L11_adder_eqn);


--A1L14 is Add0~13 at LABCELL_X14_Y17_N33
A1L14_adder_eqn = ( Hcount[1] ) + ( GND ) + ( A1L11 );
A1L14 = SUM(A1L14_adder_eqn);

--A1L15 is Add0~14 at LABCELL_X14_Y17_N33
A1L15_adder_eqn = ( Hcount[1] ) + ( GND ) + ( A1L11 );
A1L15 = CARRY(A1L15_adder_eqn);


--A1L18 is Add0~17 at LABCELL_X14_Y17_N36
A1L18_adder_eqn = ( Hcount[2] ) + ( GND ) + ( A1L15 );
A1L18 = SUM(A1L18_adder_eqn);

--A1L19 is Add0~18 at LABCELL_X14_Y17_N36
A1L19_adder_eqn = ( Hcount[2] ) + ( GND ) + ( A1L15 );
A1L19 = CARRY(A1L19_adder_eqn);


--A1L22 is Add0~21 at LABCELL_X14_Y17_N39
A1L22_adder_eqn = ( Hcount[3] ) + ( GND ) + ( A1L19 );
A1L22 = SUM(A1L22_adder_eqn);

--A1L23 is Add0~22 at LABCELL_X14_Y17_N39
A1L23_adder_eqn = ( Hcount[3] ) + ( GND ) + ( A1L19 );
A1L23 = CARRY(A1L23_adder_eqn);


--A1L26 is Add0~25 at LABCELL_X14_Y17_N48
A1L26_adder_eqn = ( Hcount[6] ) + ( GND ) + ( A1L39 );
A1L26 = SUM(A1L26_adder_eqn);

--A1L27 is Add0~26 at LABCELL_X14_Y17_N48
A1L27_adder_eqn = ( Hcount[6] ) + ( GND ) + ( A1L39 );
A1L27 = CARRY(A1L27_adder_eqn);


--A1L30 is Add0~29 at LABCELL_X14_Y17_N51
A1L30_adder_eqn = ( Hcount[7] ) + ( GND ) + ( A1L27 );
A1L30 = SUM(A1L30_adder_eqn);

--A1L31 is Add0~30 at LABCELL_X14_Y17_N51
A1L31_adder_eqn = ( Hcount[7] ) + ( GND ) + ( A1L27 );
A1L31 = CARRY(A1L31_adder_eqn);


--A1L34 is Add0~33 at LABCELL_X14_Y17_N42
A1L34_adder_eqn = ( Hcount[4] ) + ( GND ) + ( A1L23 );
A1L34 = SUM(A1L34_adder_eqn);

--A1L35 is Add0~34 at LABCELL_X14_Y17_N42
A1L35_adder_eqn = ( Hcount[4] ) + ( GND ) + ( A1L23 );
A1L35 = CARRY(A1L35_adder_eqn);


--A1L38 is Add0~37 at LABCELL_X14_Y17_N45
A1L38_adder_eqn = ( Hcount[5] ) + ( GND ) + ( A1L35 );
A1L38 = SUM(A1L38_adder_eqn);

--A1L39 is Add0~38 at LABCELL_X14_Y17_N45
A1L39_adder_eqn = ( Hcount[5] ) + ( GND ) + ( A1L35 );
A1L39 = CARRY(A1L39_adder_eqn);


--A1L42 is Add1~1 at LABCELL_X14_Y16_N30
A1L42_adder_eqn = ( Vcount[0] ) + ( VCC ) + ( !VCC );
A1L42 = SUM(A1L42_adder_eqn);

--A1L43 is Add1~2 at LABCELL_X14_Y16_N30
A1L43_adder_eqn = ( Vcount[0] ) + ( VCC ) + ( !VCC );
A1L43 = CARRY(A1L43_adder_eqn);


--A1L46 is Add1~5 at LABCELL_X14_Y16_N45
A1L46_adder_eqn = ( Vcount[5] ) + ( GND ) + ( A1L59 );
A1L46 = SUM(A1L46_adder_eqn);

--A1L47 is Add1~6 at LABCELL_X14_Y16_N45
A1L47_adder_eqn = ( Vcount[5] ) + ( GND ) + ( A1L59 );
A1L47 = CARRY(A1L47_adder_eqn);


--A1L50 is Add1~9 at LABCELL_X14_Y16_N57
A1L50_adder_eqn = ( Vcount[9] ) + ( GND ) + ( A1L71 );
A1L50 = SUM(A1L50_adder_eqn);


--A1L54 is Add1~13 at LABCELL_X14_Y16_N39
A1L54_adder_eqn = ( Vcount[3] ) + ( GND ) + ( A1L79 );
A1L54 = SUM(A1L54_adder_eqn);

--A1L55 is Add1~14 at LABCELL_X14_Y16_N39
A1L55_adder_eqn = ( Vcount[3] ) + ( GND ) + ( A1L79 );
A1L55 = CARRY(A1L55_adder_eqn);


--A1L58 is Add1~17 at LABCELL_X14_Y16_N42
A1L58_adder_eqn = ( Vcount[4] ) + ( GND ) + ( A1L55 );
A1L58 = SUM(A1L58_adder_eqn);

--A1L59 is Add1~18 at LABCELL_X14_Y16_N42
A1L59_adder_eqn = ( Vcount[4] ) + ( GND ) + ( A1L55 );
A1L59 = CARRY(A1L59_adder_eqn);


--A1L62 is Add1~21 at LABCELL_X14_Y16_N48
A1L62_adder_eqn = ( Vcount[6] ) + ( GND ) + ( A1L47 );
A1L62 = SUM(A1L62_adder_eqn);

--A1L63 is Add1~22 at LABCELL_X14_Y16_N48
A1L63_adder_eqn = ( Vcount[6] ) + ( GND ) + ( A1L47 );
A1L63 = CARRY(A1L63_adder_eqn);


--A1L66 is Add1~25 at LABCELL_X14_Y16_N51
A1L66_adder_eqn = ( Vcount[7] ) + ( GND ) + ( A1L63 );
A1L66 = SUM(A1L66_adder_eqn);

--A1L67 is Add1~26 at LABCELL_X14_Y16_N51
A1L67_adder_eqn = ( Vcount[7] ) + ( GND ) + ( A1L63 );
A1L67 = CARRY(A1L67_adder_eqn);


--A1L70 is Add1~29 at LABCELL_X14_Y16_N54
A1L70_adder_eqn = ( Vcount[8] ) + ( GND ) + ( A1L67 );
A1L70 = SUM(A1L70_adder_eqn);

--A1L71 is Add1~30 at LABCELL_X14_Y16_N54
A1L71_adder_eqn = ( Vcount[8] ) + ( GND ) + ( A1L67 );
A1L71 = CARRY(A1L71_adder_eqn);


--A1L74 is Add1~33 at LABCELL_X14_Y16_N33
A1L74_adder_eqn = ( Vcount[1] ) + ( GND ) + ( A1L43 );
A1L74 = SUM(A1L74_adder_eqn);

--A1L75 is Add1~34 at LABCELL_X14_Y16_N33
A1L75_adder_eqn = ( Vcount[1] ) + ( GND ) + ( A1L43 );
A1L75 = CARRY(A1L75_adder_eqn);


--A1L78 is Add1~37 at LABCELL_X14_Y16_N36
A1L78_adder_eqn = ( Vcount[2] ) + ( GND ) + ( A1L75 );
A1L78 = SUM(A1L78_adder_eqn);

--A1L79 is Add1~38 at LABCELL_X14_Y16_N36
A1L79_adder_eqn = ( Vcount[2] ) + ( GND ) + ( A1L75 );
A1L79 = CARRY(A1L79_adder_eqn);


--A1L118 is Add3~1 at LABCELL_X12_Y17_N39
A1L118_adder_eqn = ( col_counter[4] ) + ( GND ) + ( A1L123 );
A1L118 = SUM(A1L118_adder_eqn);

--A1L119 is Add3~2 at LABCELL_X12_Y17_N39
A1L119_adder_eqn = ( col_counter[4] ) + ( GND ) + ( A1L123 );
A1L119 = CARRY(A1L119_adder_eqn);


--A1L122 is Add3~5 at LABCELL_X12_Y17_N36
A1L122_adder_eqn = ( col_counter[3] ) + ( GND ) + ( A1L127 );
A1L122 = SUM(A1L122_adder_eqn);

--A1L123 is Add3~6 at LABCELL_X12_Y17_N36
A1L123_adder_eqn = ( col_counter[3] ) + ( GND ) + ( A1L127 );
A1L123 = CARRY(A1L123_adder_eqn);


--A1L126 is Add3~9 at LABCELL_X12_Y17_N33
A1L126_adder_eqn = ( col_counter[2] ) + ( GND ) + ( A1L151 );
A1L126 = SUM(A1L126_adder_eqn);

--A1L127 is Add3~10 at LABCELL_X12_Y17_N33
A1L127_adder_eqn = ( col_counter[2] ) + ( GND ) + ( A1L151 );
A1L127 = CARRY(A1L127_adder_eqn);


--A1L82 is Add2~1 at LABCELL_X12_Y16_N30
A1L82_adder_eqn = ( row_counter[0] ) + ( row_counter[1] ) + ( !VCC );
A1L82 = SUM(A1L82_adder_eqn);

--A1L83 is Add2~2 at LABCELL_X12_Y16_N30
A1L83_adder_eqn = ( row_counter[0] ) + ( row_counter[1] ) + ( !VCC );
A1L83 = CARRY(A1L83_adder_eqn);


--A1L86 is Add2~5 at LABCELL_X12_Y16_N33
A1L86_adder_eqn = ( A1L261Q ) + ( GND ) + ( A1L83 );
A1L86 = SUM(A1L86_adder_eqn);

--A1L87 is Add2~6 at LABCELL_X12_Y16_N33
A1L87_adder_eqn = ( A1L261Q ) + ( GND ) + ( A1L83 );
A1L87 = CARRY(A1L87_adder_eqn);


--A1L90 is Add2~9 at LABCELL_X12_Y16_N42
A1L90_adder_eqn = ( row_counter[5] ) + ( GND ) + ( A1L95 );
A1L90 = SUM(A1L90_adder_eqn);

--A1L91 is Add2~10 at LABCELL_X12_Y16_N42
A1L91_adder_eqn = ( row_counter[5] ) + ( GND ) + ( A1L95 );
A1L91 = CARRY(A1L91_adder_eqn);


--A1L94 is Add2~13 at LABCELL_X12_Y16_N39
A1L94_adder_eqn = ( row_counter[4] ) + ( GND ) + ( A1L99 );
A1L94 = SUM(A1L94_adder_eqn);

--A1L95 is Add2~14 at LABCELL_X12_Y16_N39
A1L95_adder_eqn = ( row_counter[4] ) + ( GND ) + ( A1L99 );
A1L95 = CARRY(A1L95_adder_eqn);


--A1L98 is Add2~17 at LABCELL_X12_Y16_N36
A1L98_adder_eqn = ( row_counter[3] ) + ( GND ) + ( A1L87 );
A1L98 = SUM(A1L98_adder_eqn);

--A1L99 is Add2~18 at LABCELL_X12_Y16_N36
A1L99_adder_eqn = ( row_counter[3] ) + ( GND ) + ( A1L87 );
A1L99 = CARRY(A1L99_adder_eqn);


--A1L102 is Add2~21 at LABCELL_X12_Y16_N54
A1L102_adder_eqn = ( row_counter[9] ) + ( GND ) + ( A1L107 );
A1L102 = SUM(A1L102_adder_eqn);


--A1L106 is Add2~25 at LABCELL_X12_Y16_N51
A1L106_adder_eqn = ( row_counter[8] ) + ( GND ) + ( A1L111 );
A1L106 = SUM(A1L106_adder_eqn);

--A1L107 is Add2~26 at LABCELL_X12_Y16_N51
A1L107_adder_eqn = ( row_counter[8] ) + ( GND ) + ( A1L111 );
A1L107 = CARRY(A1L107_adder_eqn);


--A1L110 is Add2~29 at LABCELL_X12_Y16_N48
A1L110_adder_eqn = ( row_counter[7] ) + ( GND ) + ( A1L115 );
A1L110 = SUM(A1L110_adder_eqn);

--A1L111 is Add2~30 at LABCELL_X12_Y16_N48
A1L111_adder_eqn = ( row_counter[7] ) + ( GND ) + ( A1L115 );
A1L111 = CARRY(A1L111_adder_eqn);


--A1L114 is Add2~33 at LABCELL_X12_Y16_N45
A1L114_adder_eqn = ( row_counter[6] ) + ( GND ) + ( A1L91 );
A1L114 = SUM(A1L114_adder_eqn);

--A1L115 is Add2~34 at LABCELL_X12_Y16_N45
A1L115_adder_eqn = ( row_counter[6] ) + ( GND ) + ( A1L91 );
A1L115 = CARRY(A1L115_adder_eqn);


--A1L130 is Add3~13 at LABCELL_X12_Y17_N54
A1L130_adder_eqn = ( col_counter[9] ) + ( GND ) + ( A1L135 );
A1L130 = SUM(A1L130_adder_eqn);


--A1L134 is Add3~17 at LABCELL_X12_Y17_N51
A1L134_adder_eqn = ( col_counter[8] ) + ( GND ) + ( A1L139 );
A1L134 = SUM(A1L134_adder_eqn);

--A1L135 is Add3~18 at LABCELL_X12_Y17_N51
A1L135_adder_eqn = ( col_counter[8] ) + ( GND ) + ( A1L139 );
A1L135 = CARRY(A1L135_adder_eqn);


--A1L138 is Add3~21 at LABCELL_X12_Y17_N48
A1L138_adder_eqn = ( col_counter[7] ) + ( GND ) + ( A1L143 );
A1L138 = SUM(A1L138_adder_eqn);

--A1L139 is Add3~22 at LABCELL_X12_Y17_N48
A1L139_adder_eqn = ( col_counter[7] ) + ( GND ) + ( A1L143 );
A1L139 = CARRY(A1L139_adder_eqn);


--A1L142 is Add3~25 at LABCELL_X12_Y17_N45
A1L142_adder_eqn = ( col_counter[6] ) + ( GND ) + ( A1L147 );
A1L142 = SUM(A1L142_adder_eqn);

--A1L143 is Add3~26 at LABCELL_X12_Y17_N45
A1L143_adder_eqn = ( col_counter[6] ) + ( GND ) + ( A1L147 );
A1L143 = CARRY(A1L143_adder_eqn);


--A1L146 is Add3~29 at LABCELL_X12_Y17_N42
A1L146_adder_eqn = ( col_counter[5] ) + ( GND ) + ( A1L119 );
A1L146 = SUM(A1L146_adder_eqn);

--A1L147 is Add3~30 at LABCELL_X12_Y17_N42
A1L147_adder_eqn = ( col_counter[5] ) + ( GND ) + ( A1L119 );
A1L147 = CARRY(A1L147_adder_eqn);


--Hcount[8] is Hcount[8] at FF_X14_Y17_N19
--register power-up is low

Hcount[8] = DFFEAS( , A1L241Q,  ,  ,  , A1L2,  , A1L188, VCC);


--Hcount[9] is Hcount[9] at FF_X14_Y17_N16
--register power-up is low

Hcount[9] = DFFEAS( , A1L241Q,  ,  ,  , A1L6,  , A1L188, VCC);


--Hcount[0] is Hcount[0] at FF_X14_Y17_N29
--register power-up is low

Hcount[0] = DFFEAS( , A1L241Q,  ,  ,  , A1L10,  , A1L188, VCC);


--Hcount[1] is Hcount[1] at FF_X14_Y17_N8
--register power-up is low

Hcount[1] = DFFEAS(A1L218, A1L241Q,  ,  ,  ,  ,  , A1L188,  );


--Hcount[2] is Hcount[2] at FF_X14_Y17_N23
--register power-up is low

Hcount[2] = DFFEAS( , A1L241Q,  ,  ,  , A1L18,  , A1L188, VCC);


--Hcount[3] is Hcount[3] at FF_X14_Y17_N5
--register power-up is low

Hcount[3] = DFFEAS( , A1L241Q,  ,  ,  , A1L22,  , A1L188, VCC);


--Hcount[6] is Hcount[6] at FF_X14_Y17_N26
--register power-up is low

Hcount[6] = DFFEAS( , A1L241Q,  ,  ,  , A1L26,  , A1L188, VCC);


--Hcount[7] is Hcount[7] at FF_X14_Y17_N2
--register power-up is low

Hcount[7] = DFFEAS( , A1L241Q,  ,  ,  , A1L30,  , A1L188, VCC);


--Hcount[4] is Hcount[4] at FF_X14_Y17_N14
--register power-up is low

Hcount[4] = DFFEAS( , A1L241Q,  ,  ,  , A1L34,  , A1L188, VCC);


--Hcount[5] is Hcount[5] at FF_X14_Y17_N11
--register power-up is low

Hcount[5] = DFFEAS( , A1L241Q,  ,  ,  , A1L38,  , A1L188, VCC);


--Vcount[0] is Vcount[0] at FF_X14_Y16_N5
--register power-up is low

Vcount[0] = DFFEAS( , !A1L230Q,  ,  ,  , A1L42,  , A1L194, VCC);


--Vcount[5] is Vcount[5] at FF_X14_Y16_N23
--register power-up is low

Vcount[5] = DFFEAS( , !A1L230Q,  ,  ,  , A1L46,  , A1L194, VCC);


--Vcount[9] is Vcount[9] at FF_X14_Y16_N32
--register power-up is low

Vcount[9] = DFFEAS( , !A1L230Q,  ,  ,  , A1L50,  , A1L194, VCC);


--Vcount[3] is Vcount[3] at FF_X14_Y16_N25
--register power-up is low

Vcount[3] = DFFEAS( , !A1L230Q,  ,  ,  , A1L54,  , A1L194, VCC);


--Vcount[4] is Vcount[4] at FF_X14_Y16_N2
--register power-up is low

Vcount[4] = DFFEAS( , !A1L230Q,  ,  ,  , A1L58,  , A1L194, VCC);


--Vcount[6] is Vcount[6] at FF_X14_Y16_N29
--register power-up is low

Vcount[6] = DFFEAS( , !A1L230Q,  ,  ,  , A1L62,  , A1L194, VCC);


--Vcount[7] is Vcount[7] at FF_X14_Y16_N19
--register power-up is low

Vcount[7] = DFFEAS( , !A1L230Q,  ,  ,  , A1L66,  , A1L194, VCC);


--Vcount[8] is Vcount[8] at FF_X14_Y16_N11
--register power-up is low

Vcount[8] = DFFEAS( , !A1L230Q,  ,  ,  , A1L70,  , A1L194, VCC);


--Vcount[1] is Vcount[1] at FF_X14_Y16_N17
--register power-up is low

Vcount[1] = DFFEAS( , !A1L230Q,  ,  ,  , A1L74,  , A1L194, VCC);


--Vcount[2] is Vcount[2] at FF_X14_Y16_N7
--register power-up is low

Vcount[2] = DFFEAS( , !A1L230Q,  ,  ,  , A1L78,  , A1L194, VCC);


--A1L150 is Add3~33 at LABCELL_X12_Y17_N30
A1L150_adder_eqn = ( col_counter[1] ) + ( col_counter[0] ) + ( !VCC );
A1L150 = SUM(A1L150_adder_eqn);

--A1L151 is Add3~34 at LABCELL_X12_Y17_N30
A1L151_adder_eqn = ( col_counter[1] ) + ( col_counter[0] ) + ( !VCC );
A1L151 = CARRY(A1L151_adder_eqn);


--A1L241Q is pixel_clk~reg0 at FF_X13_Y17_N59
--register power-up is low

A1L241Q = DFFEAS( , A1L167,  ,  ,  , A1L239,  ,  , VCC);


--A1L230Q is Hsync~reg0 at FF_X13_Y17_N20
--register power-up is low

A1L230Q = DFFEAS(A1L231, A1L241Q,  ,  ,  ,  ,  ,  ,  );


--A1L287Q is Vsync~reg0 at FF_X13_Y16_N17
--register power-up is low

A1L287Q = DFFEAS( , !A1L230Q,  ,  ,  , A1L285,  ,  , VCC);


--col_counter[4] is col_counter[4] at FF_X13_Y17_N50
--register power-up is low

col_counter[4] = DFFEAS( , A1L241Q, A1L230Q,  , Hactive, A1L118,  ,  , VCC);


--col_counter[3] is col_counter[3] at FF_X13_Y17_N47
--register power-up is low

col_counter[3] = DFFEAS( , A1L241Q, A1L230Q,  , Hactive, A1L122,  ,  , VCC);


--col_counter[2] is col_counter[2] at FF_X13_Y17_N8
--register power-up is low

col_counter[2] = DFFEAS( , A1L241Q, A1L230Q,  , Hactive, A1L126,  ,  , VCC);


--A1L232 is LessThan4~0 at LABCELL_X12_Y17_N0
A1L232 = ( col_counter[4] & ( col_counter[3] ) ) # ( col_counter[4] & ( !col_counter[3] & ( col_counter[2] ) ) );


--row_counter[1] is row_counter[1] at FF_X13_Y16_N32
--register power-up is low

row_counter[1] = DFFEAS(A1L259, A1L230Q, A1L287Q,  , Vactive,  ,  ,  ,  );


--row_counter[0] is row_counter[0] at FF_X13_Y16_N44
--register power-up is low

row_counter[0] = DFFEAS( , A1L230Q, A1L287Q,  , Vactive, A1L257,  ,  , VCC);


--row_counter[2] is row_counter[2] at FF_X13_Y16_N34
--register power-up is low

row_counter[2] = DFFEAS( , A1L230Q, A1L287Q,  , Vactive, A1L86,  ,  , VCC);


--row_counter[5] is row_counter[5] at FF_X13_Y16_N11
--register power-up is low

row_counter[5] = DFFEAS( , A1L230Q, A1L287Q,  , Vactive, A1L90,  ,  , VCC);


--row_counter[4] is row_counter[4] at FF_X13_Y16_N29
--register power-up is low

row_counter[4] = DFFEAS( , A1L230Q, A1L287Q,  , Vactive, A1L94,  ,  , VCC);


--row_counter[3] is row_counter[3] at FF_X13_Y16_N53
--register power-up is low

row_counter[3] = DFFEAS( , A1L230Q, A1L287Q,  , Vactive, A1L98,  ,  , VCC);


--A1L196 is Equal8~0 at MLABCELL_X13_Y16_N21
A1L196 = ( !A1L261Q & ( (!row_counter[3] & (!row_counter[5] & !row_counter[4])) ) );


--row_counter[9] is row_counter[9] at FF_X13_Y16_N8
--register power-up is low

row_counter[9] = DFFEAS( , A1L230Q, A1L287Q,  , Vactive, A1L102,  ,  , VCC);


--row_counter[8] is row_counter[8] at FF_X13_Y16_N2
--register power-up is low

row_counter[8] = DFFEAS( , A1L230Q, A1L287Q,  , Vactive, A1L106,  ,  , VCC);


--row_counter[7] is row_counter[7] at FF_X13_Y16_N47
--register power-up is low

row_counter[7] = DFFEAS( , A1L230Q, A1L287Q,  , Vactive, A1L110,  ,  , VCC);


--row_counter[6] is row_counter[6] at FF_X13_Y16_N5
--register power-up is low

row_counter[6] = DFFEAS( , A1L230Q, A1L287Q,  , Vactive, A1L114,  ,  , VCC);


--A1L197 is Equal8~1 at MLABCELL_X13_Y16_N42
A1L197 = (!row_counter[8] & (!row_counter[9] & (!row_counter[6] & !row_counter[7])));


--A1L198 is Equal8~2 at MLABCELL_X13_Y16_N12
A1L198 = ( A1L196 & ( (row_counter[0] & (!row_counter[1] & A1L197)) ) );


--col_counter[9] is col_counter[9] at FF_X13_Y17_N53
--register power-up is low

col_counter[9] = DFFEAS( , A1L241Q, A1L230Q,  , Hactive, A1L130,  ,  , VCC);


--col_counter[8] is col_counter[8] at FF_X13_Y17_N44
--register power-up is low

col_counter[8] = DFFEAS( , A1L241Q, A1L230Q,  , Hactive, A1L134,  ,  , VCC);


--col_counter[7] is col_counter[7] at FF_X13_Y17_N35
--register power-up is low

col_counter[7] = DFFEAS( , A1L241Q, A1L230Q,  , Hactive, A1L138,  ,  , VCC);


--col_counter[6] is col_counter[6] at FF_X13_Y17_N29
--register power-up is low

col_counter[6] = DFFEAS( , A1L241Q, A1L230Q,  , Hactive, A1L142,  ,  , VCC);


--col_counter[5] is col_counter[5] at FF_X13_Y17_N11
--register power-up is low

col_counter[5] = DFFEAS( , A1L241Q, A1L230Q,  , Hactive, A1L146,  ,  , VCC);


--A1L233 is LessThan4~1 at LABCELL_X12_Y17_N6
A1L233 = ( !col_counter[5] & ( !col_counter[9] & ( (!col_counter[6] & (!col_counter[8] & !col_counter[7])) ) ) );


--A1L199 is Equal8~3 at MLABCELL_X13_Y16_N39
A1L199 = ( !row_counter[4] & ( (!row_counter[3] & !row_counter[5]) ) );


--A1L269 is R~0 at MLABCELL_X13_Y16_N24
A1L269 = ( A1L254 & ( A1L199 & ( (!A1L197) # ((!A1L261Q & (!row_counter[1])) # (A1L261Q & (row_counter[1] & row_counter[0]))) ) ) ) # ( A1L254 & ( !A1L199 ) );


--Hactive is Hactive at FF_X13_Y17_N23
--register power-up is low

Hactive = DFFEAS( , A1L241Q,  ,  ,  , A1L214,  ,  , VCC);


--Vactive is Vactive at FF_X13_Y16_N38
--register power-up is low

Vactive = DFFEAS( , !A1L230Q,  ,  ,  , A1L272,  ,  , VCC);


--A1L270 is R~1 at MLABCELL_X13_Y17_N54
A1L270 = ( A1L233 & ( A1L232 & ( (Hactive & (Vactive & ((A1L269) # (A1L198)))) ) ) ) # ( !A1L233 & ( A1L232 & ( (Hactive & (Vactive & ((A1L269) # (A1L198)))) ) ) ) # ( A1L233 & ( !A1L232 & ( (A1L198 & (Hactive & Vactive)) ) ) ) # ( !A1L233 & ( !A1L232 & ( (Hactive & (Vactive & ((A1L269) # (A1L198)))) ) ) );


--A1L242 is process_3~0 at MLABCELL_X13_Y16_N57
A1L242 = ( A1L199 & ( (A1L197 & (row_counter[2] & ((!row_counter[0]) # (!row_counter[1])))) ) );


--A1L211 is G~0 at MLABCELL_X13_Y16_N48
A1L211 = ( Vactive & ( row_counter[0] & ( (Hactive & ((!A1L197) # ((!A1L196) # (row_counter[1])))) ) ) ) # ( Vactive & ( !row_counter[0] & ( Hactive ) ) );


--A1L243 is process_3~1 at MLABCELL_X13_Y16_N18
A1L243 = ( row_counter[1] & ( (A1L197 & A1L196) ) );


--A1L212 is G~1 at LABCELL_X12_Y17_N15
A1L212 = ( A1L210 & ( A1L242 & ( (A1L243 & A1L211) ) ) ) # ( !A1L210 & ( A1L242 & ( (A1L243 & A1L211) ) ) ) # ( A1L210 & ( !A1L242 & ( (A1L211 & (((!A1L233) # (A1L232)) # (A1L243))) ) ) ) # ( !A1L210 & ( !A1L242 & ( (A1L243 & A1L211) ) ) );


--A1L165 is B~0 at LABCELL_X12_Y17_N18
A1L165 = ( A1L232 & ( A1L233 & ( (A1L211 & (!A1L243 & ((A1L242) # (A1L164)))) ) ) ) # ( !A1L232 & ( A1L233 & ( (A1L211 & (!A1L243 & A1L242)) ) ) ) # ( A1L232 & ( !A1L233 & ( (A1L211 & (!A1L243 & ((A1L242) # (A1L164)))) ) ) ) # ( !A1L232 & ( !A1L233 & ( (A1L211 & (!A1L243 & ((A1L242) # (A1L164)))) ) ) );


--A1L180 is Equal0~0 at MLABCELL_X13_Y17_N39
A1L180 = ( !A1L2 & ( !A1L6 & ( (!A1L14 & (!A1L10 & (!A1L18 & !A1L22))) ) ) );


--A1L184 is Equal1~0 at LABCELL_X14_Y17_N24
A1L184 = ( !A1L38 & ( A1L30 & ( (!A1L26 & A1L34) ) ) );


--A1L185 is Equal1~1 at MLABCELL_X13_Y17_N33
A1L185 = ( A1L34 & ( !A1L38 ) );


--A1L181 is Equal0~1 at LABCELL_X14_Y17_N3
A1L181 = ( !A1L18 & ( (!A1L14 & (!A1L10 & !A1L22)) ) );


--A1L186 is Equal2~0 at MLABCELL_X13_Y17_N9
A1L186 = ( A1L181 & ( A1L185 & ( (!A1L26 & (A1L6 & (A1L2 & !A1L30))) ) ) );


--A1L188 is Equal3~0 at LABCELL_X14_Y17_N15
A1L188 = ( A1L6 & ( A1L189 & ( (!A1L26 & (A1L38 & (!A1L30 & A1L2))) ) ) );


--A1L182 is Equal0~2 at LABCELL_X14_Y17_N0
A1L182 = ( A1L26 & ( (A1L38 & (!A1L34 & !A1L30)) ) );


--A1L228 is Hsync~0 at MLABCELL_X13_Y17_N42
A1L228 = ( A1L188 & ( A1L186 & ( ((A1L182 & A1L180)) # (A1L230Q) ) ) ) # ( !A1L188 & ( A1L186 & ( ((A1L182 & A1L180)) # (A1L230Q) ) ) ) # ( A1L188 & ( !A1L186 & ( (A1L180 & (((A1L230Q & A1L184)) # (A1L182))) ) ) ) # ( !A1L188 & ( !A1L186 & ( ((A1L182 & A1L180)) # (A1L230Q) ) ) );


--A1L190 is Equal4~0 at LABCELL_X14_Y16_N15
A1L190 = ( !A1L78 & ( A1L74 ) );


--A1L191 is Equal4~1 at MLABCELL_X13_Y16_N9
A1L191 = ( !A1L70 & ( A1L190 & ( (!A1L54 & (!A1L58 & (!A1L62 & !A1L66))) ) ) );


--A1L194 is Equal7~0 at LABCELL_X14_Y16_N27
A1L194 = ( !A1L70 & ( A1L195 & ( (!A1L62 & (!A1L46 & (A1L50 & !A1L66))) ) ) );


--A1L285 is Vsync~0 at MLABCELL_X13_Y16_N0
A1L285 = ( A1L194 & ( A1L191 & ( (!A1L42 & (!A1L46 & ((!A1L50)))) # (A1L42 & (A1L287Q & (!A1L46 $ (!A1L50)))) ) ) ) # ( !A1L194 & ( A1L191 & ( ((!A1L46 & (!A1L42 & !A1L50))) # (A1L287Q) ) ) ) # ( !A1L194 & ( !A1L191 & ( A1L287Q ) ) );


--A1L183 is Equal0~3 at MLABCELL_X13_Y17_N51
A1L183 = ( !A1L18 & ( !A1L14 & ( !A1L10 ) ) );


--A1L187 is Equal2~1 at MLABCELL_X13_Y17_N12
A1L187 = ( A1L6 & ( A1L183 & ( (!A1L22 & (!A1L26 & (!A1L30 & A1L2))) ) ) );


--A1L214 is Hactive~0 at MLABCELL_X13_Y17_N0
A1L214 = ( A1L182 & ( A1L187 & ( (Hactive & ((!A1L185) # (A1L180))) ) ) ) # ( !A1L182 & ( A1L187 & ( (!A1L185 & (((A1L184 & A1L180)) # (Hactive))) # (A1L185 & (((A1L184 & A1L180)))) ) ) ) # ( A1L182 & ( !A1L187 & ( Hactive ) ) ) # ( !A1L182 & ( !A1L187 & ( ((A1L184 & A1L180)) # (Hactive) ) ) );


--A1L192 is Equal4~2 at LABCELL_X14_Y16_N9
A1L192 = ( !A1L70 & ( !A1L66 & ( (!A1L58 & !A1L62) ) ) );


--A1L193 is Equal4~3 at LABCELL_X14_Y16_N0
A1L193 = ( !A1L78 & ( !A1L54 & ( A1L74 ) ) );


--A1L272 is Vactive~0 at LABCELL_X14_Y16_N18
A1L272 = ( A1L50 & ( A1L192 & ( (Vactive & ((!A1L42) # ((!A1L193) # (A1L46)))) ) ) ) # ( !A1L50 & ( A1L192 & ( ((A1L42 & (A1L193 & A1L46))) # (Vactive) ) ) ) # ( A1L50 & ( !A1L192 & ( Vactive ) ) ) # ( !A1L50 & ( !A1L192 & ( Vactive ) ) );


--col_counter[1] is col_counter[1] at FF_X13_Y17_N32
--register power-up is low

col_counter[1] = DFFEAS( , A1L241Q, A1L230Q,  , Hactive, A1L150,  ,  , VCC);


--col_counter[0] is col_counter[0] at FF_X13_Y17_N26
--register power-up is low

col_counter[0] = DFFEAS( , A1L241Q, A1L230Q,  , Hactive, A1L170,  ,  , VCC);


--A1L189 is Equal3~1 at LABCELL_X14_Y17_N18
A1L189 = ( !A1L18 & ( !A1L34 & ( (!A1L10 & (!A1L14 & !A1L22)) ) ) );


--A1L195 is Equal7~1 at LABCELL_X14_Y16_N12
A1L195 = ( !A1L58 & ( (!A1L74 & (A1L54 & (A1L42 & A1L78))) ) );


--A1L239 is pixel_clk~0 at MLABCELL_X13_Y17_N24
A1L239 = !A1L241Q;


--A1L257 is row_counter[0]~0 at MLABCELL_X13_Y16_N54
A1L257 = ( !row_counter[0] );


--A1L170 is col_counter[0]~0 at LABCELL_X12_Y17_N27
A1L170 = ( !col_counter[0] );


--A1L240 is pixel_clk~output at IOOBUF_X14_Y0_N53
A1L240 = OUTPUT_BUFFER.O(.I(A1L241Q), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--pixel_clk is pixel_clk at PIN_R7
pixel_clk = OUTPUT();


--A1L229 is Hsync~output at IOOBUF_X20_Y45_N36
A1L229 = OUTPUT_BUFFER.O(.I(A1L230Q), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--Hsync is Hsync at PIN_H8
Hsync = OUTPUT();


--A1L286 is Vsync~output at IOOBUF_X20_Y45_N53
A1L286 = OUTPUT_BUFFER.O(.I(A1L287Q), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--Vsync is Vsync at PIN_G8
Vsync = OUTPUT();


--A1L246 is R[0]~output at IOOBUF_X18_Y45_N53
A1L246 = OUTPUT_BUFFER.O(.I(A1L270), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--R[0] is R[0] at PIN_A9
R[0] = OUTPUT();


--A1L248 is R[1]~output at IOOBUF_X16_Y45_N42
A1L248 = OUTPUT_BUFFER.O(.I(A1L270), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--R[1] is R[1] at PIN_B10
R[1] = OUTPUT();


--A1L250 is R[2]~output at IOOBUF_X16_Y45_N59
A1L250 = OUTPUT_BUFFER.O(.I(A1L270), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--R[2] is R[2] at PIN_C9
R[2] = OUTPUT();


--A1L252 is R[3]~output at IOOBUF_X16_Y45_N76
A1L252 = OUTPUT_BUFFER.O(.I(A1L270), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--R[3] is R[3] at PIN_A5
R[3] = OUTPUT();


--A1L202 is G[0]~output at IOOBUF_X22_Y45_N36
A1L202 = OUTPUT_BUFFER.O(.I(A1L212), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--G[0] is G[0] at PIN_L7
G[0] = OUTPUT();


--A1L204 is G[1]~output at IOOBUF_X22_Y45_N53
A1L204 = OUTPUT_BUFFER.O(.I(A1L212), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--G[1] is G[1] at PIN_K7
G[1] = OUTPUT();


--A1L206 is G[2]~output at IOOBUF_X20_Y45_N2
A1L206 = OUTPUT_BUFFER.O(.I(A1L212), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--G[2] is G[2] at PIN_J7
G[2] = OUTPUT();


--A1L208 is G[3]~output at IOOBUF_X20_Y45_N19
A1L208 = OUTPUT_BUFFER.O(.I(A1L212), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--G[3] is G[3] at PIN_J8
G[3] = OUTPUT();


--A1L156 is B[0]~output at IOOBUF_X14_Y45_N36
A1L156 = OUTPUT_BUFFER.O(.I(A1L165), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--B[0] is B[0] at PIN_B6
B[0] = OUTPUT();


--A1L158 is B[1]~output at IOOBUF_X14_Y45_N53
A1L158 = OUTPUT_BUFFER.O(.I(A1L165), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--B[1] is B[1] at PIN_B7
B[1] = OUTPUT();


--A1L160 is B[2]~output at IOOBUF_X12_Y45_N2
A1L160 = OUTPUT_BUFFER.O(.I(A1L165), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--B[2] is B[2] at PIN_A8
B[2] = OUTPUT();


--A1L162 is B[3]~output at IOOBUF_X12_Y45_N19
A1L162 = OUTPUT_BUFFER.O(.I(A1L165), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--B[3] is B[3] at PIN_A7
B[3] = OUTPUT();


--A1L235 is nblanck~output at IOOBUF_X46_Y45_N59
A1L235 = OUTPUT_BUFFER.O(.I(VCC), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--nblanck is nblanck at PIN_F15
nblanck = OUTPUT();


--A1L237 is nsync~output at IOOBUF_X19_Y0_N19
A1L237 = OUTPUT_BUFFER.O(.I(GND), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--nsync is nsync at PIN_T9
nsync = OUTPUT();


--A1L254 is red_switch~input at IOIBUF_X33_Y0_N41
A1L254 = INPUT_BUFFER(.I(red_switch), );


--red_switch is red_switch at PIN_U13
red_switch = INPUT();


--A1L210 is green_switch~input at IOIBUF_X33_Y0_N58
A1L210 = INPUT_BUFFER(.I(green_switch), );


--green_switch is green_switch at PIN_V13
green_switch = INPUT();


--A1L164 is blue_switch~input at IOIBUF_X34_Y0_N1
A1L164 = INPUT_BUFFER(.I(blue_switch), );


--blue_switch is blue_switch at PIN_T13
blue_switch = INPUT();


--A1L167 is clk~input at IOIBUF_X22_Y0_N1
A1L167 = INPUT_BUFFER(.I(clk), );


--clk is clk at PIN_M9
clk = INPUT();



--A1L218 is Hcount[1]~feeder at LABCELL_X14_Y17_N6
A1L218 = ( A1L14 );


--A1L259 is row_counter[1]~feeder at MLABCELL_X13_Y16_N30
A1L259 = ( A1L82 );


--A1L231 is Hsync~reg0feeder at MLABCELL_X13_Y17_N18
A1L231 = ( A1L228 );


--A1L261Q is row_counter[2]~DUPLICATE at FF_X13_Y16_N35
--register power-up is low

A1L261Q = DFFEAS( , A1L230Q, A1L287Q,  , Vactive, A1L86,  ,  , VCC);


